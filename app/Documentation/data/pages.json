{
	"pour_commencer.presentation": {
		"title": "Pr\u00e9sentation du framework",
		"content": {
			"time": 1682521567553,
			"blocks": [
				{
					"id": "f8Lw9rZmL4",
					"type": "paragraph",
					"data": {
						"text": "EzFrame est un framework."
					}
				},
				{
					"id": "9d66E2PN8E",
					"type": "paragraph",
					"data": {
						"text": "C'est-\u00e0-dire un \u00e9chafaudage, squelette sur lequel on va assembler les diff\u00e9rents \u00e9l\u00e9ments, composants n\u00e9cessaires \u00e0 la cr\u00e9ation d'un site sur mesure pour chaque client."
					}
				},
				{
					"id": "jQzJjS4gKQ",
					"type": "paragraph",
					"data": {
						"text": "Ce framework propose des outils que l'on requiert tr\u00e8s fr\u00e9quemment dans les diff\u00e9rents projets que nous tenons, avec entre autres..."
					}
				},
				{
					"id": "oE1Qi_931N",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"Test",
							"Test 2",
							"Test 3"
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour_commencer.presentation"
	},
	"pour-commencer": {
		"title": "Pour commencer...",
		"content": {
			"time": 1682525582644,
			"blocks": [
				{
					"id": "eX_xeUixRp",
					"type": "paragraph",
					"data": {
						"text": "Veuillez choisir un item dans le menu \u00e0 gauche pour en voir le contenu<br>"
					}
				},
				{
					"id": "RWAt4PpHaH",
					"type": "paragraph",
					"data": {
						"text": "Ce qui est pr\u00e9vu :<br>"
					}
				},
				{
					"id": "9U6s0jcyr6",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"D\u00e9crire l'installation du framework",
							"D\u00e9crire comment faire le routage",
							"D\u00e9crire les deux fonctions ajax sendAjax (jQuery) et send(GET|POST) (pure JS)<br>",
							"D\u00e9crire et faire le lien des librairies js et php",
							"D\u00e9crire l'utilisation des fonctions et filtres twig",
							"D\u00e9crire l'utilisation du formBuilder"
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer"
	},
	"pour-commencer.presentation": {
		"title": "Pr\u00e9sentation du framework",
		"content": {
			"time": 1682580151476,
			"blocks": [
				{
					"id": "skdPJMrauX",
					"type": "paragraph",
					"data": {
						"text": "Le framework a \u00e9t\u00e9 cr\u00e9\u00e9 afin de cr\u00e9er un environnement de d\u00e9veloppement simple et facile \u00e0 prendre en main pour les nouveaux arrivants.<br>"
					}
				},
				{
					"id": "1PPVSyyGVD",
					"type": "paragraph",
					"data": {
						"text": "En 2022, un syst\u00e8me de versioning a \u00e9t\u00e9 mis en place sur un serveur satis interne, pour rester compatible avec notre infrastructure atlassian interne, ne nous permettant que de stocker et versionner le framework en interne. En 2023 le d\u00e9p\u00f4t et versioning est pass\u00e9 sur Github, en public."
					}
				},
				{
					"id": "4phNU6CIbu",
					"type": "paragraph",
					"data": {
						"text": "La version actuelle du framework (1.4.x) est compatible :"
					}
				},
				{
					"id": "sUCUqTw1qr",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"PHP &gt;= 7.3.x",
							"Javascript &gt;= ES6 (En gros, tout navigateur mis \u00e0 jour qui ne soit pas Internet Explorer)",
							"MySql &gt;= 5.6.x<br>"
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.presentation"
	},
	"pour-commencer.installation": {
		"title": "Installation du framework",
		"content": {
			"time": 1682600394998,
			"blocks": [
				{
					"id": "HbHyYtNZgD",
					"type": "header",
					"data": {
						"text": "N\u00e9cessaire :",
						"level": 4
					}
				},
				{
					"id": "yp1YevY7Fb",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"PHP &gt;= 7.3",
							"Composer &gt;= 2",
							"BDD MySQL &gt;= 5.6<br>"
						]
					}
				},
				{
					"id": "TOx1ZHUdx7",
					"type": "header",
					"data": {
						"text": "Installation :",
						"level": 4
					}
				},
				{
					"id": "LiroNX6OIU",
					"type": "paragraph",
					"data": {
						"text": "A la racine de votre nouveau projet, lancer la commande :"
					}
				},
				{
					"id": "BDwAYa525h",
					"type": "code",
					"data": {
						"code": "composer require groupefbo\/ezframe"
					}
				},
				{
					"id": "cCZgjJevdL",
					"type": "paragraph",
					"data": {
						"text": "Puis :<br>"
					}
				},
				{
					"id": "nt0YCDPx0V",
					"type": "code",
					"data": {
						"code": "php .\/vendor\/groupefbo\/ezframe\/bin\/install.php"
					}
				},
				{
					"id": "9unZpe8i1B",
					"type": "paragraph",
					"data": {
						"text": "Dans le fichier \/.env \u00e0 la racine du site, v\u00e9rifiez que la valeur de ENV est bien \u00e0 \"dev\""
					}
				},
				{
					"id": "QGTo9MuIiN",
					"type": "code",
					"data": {
						"code": "ENV=dev"
					}
				},
				{
					"id": "Ni9KwXOzIw",
					"type": "paragraph",
					"data": {
						"text": "Vous devrez passer cette valeur \u00e0 prod lors de la livraison du projet en environnement de production."
					}
				},
				{
					"id": "Z6OZ8vSTPq",
					"type": "paragraph",
					"data": {
						"text": "Dans le fichier \/config\/bdd.json, renseignez les valeurs \"dbname\", \"host\", \"username\", \"password\" selon vos bases de donn\u00e9es en dev et en prod, la base de donn\u00e9es utilis\u00e9e d\u00e9pends de la valeur de ENV que vous avez renseign\u00e9 pr\u00e9c\u00e9demment.<br>"
					}
				},
				{
					"id": "K2MjiuVnMG",
					"type": "code",
					"data": {
						"code": "{\n  \"prod\": {\n    \"dbname\": \"framework_sidunis\",\n    \"host\": \"localhost\",\n    \"port\": 3306,\n    \"username\": \"admindb\",\n    \"password\": \"1P0ss!ble\",\n    \"charset\": \"utf8\"\n  },\n  \"dev\": {\n    \"dbname\": \"framework_sidunis\",\n    \"host\": \"localhost\",\n    \"port\": 3306,\n    \"username\": \"admindb\",\n    \"password\": \"1P0ss!ble\",\n    \"charset\": \"utf8\"\n  }\n}"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.installation"
	},
	"pour-commencer.arborescence": {
		"title": "Arborescence",
		"content": {
			"time": 1682672849536,
			"blocks": [
				{
					"id": "gG15hB_sgl",
					"type": "paragraph",
					"data": {
						"text": "Les&nbsp; principaux dossiers du framework sont les suivants:"
					}
				},
				{
					"id": "Y2SOeGsVY6",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"app",
							"assets",
							"config",
							"templates",
							"vendor<br>"
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence"
	},
	"pour-commencer.arborescence.config": {
		"title": "config",
		"content": {
			"time": 1685430054472,
			"blocks": [
				{
					"id": "0efllkW-84",
					"type": "paragraph",
					"data": {
						"text": "Ce dossier contient les principaux fichiers de configuration du site ainsi que le fichier de route par d\u00e9faut et le fichier de langues."
					}
				},
				{
					"id": "rF3htg0Szv",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/644bb6bfa2219.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				},
				{
					"id": "SVKF3_lZOQ",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "S_6VjVGe_2",
					"type": "header",
					"data": {
						"text": "bdd.json",
						"level": 3
					}
				},
				{
					"id": "u9sWFDhMTB",
					"type": "paragraph",
					"data": {
						"text": "Ce fichier permet de stocker les informations n\u00e9cessaires \u00e0 la connexion \u00e0 la base de donn\u00e9es"
					}
				},
				{
					"id": "of7ZHIlHtr",
					"type": "paragraph",
					"data": {
						"text": "sous la forme : "
					}
				},
				{
					"id": "xtI9ST9BA_",
					"type": "code",
					"data": {
						"code": "{\n  \"prod\": {\n    \"dbname\": \"ezframe\",\n    \"host\": \"localhost\",\n    \"port\": 3306,\n    \"username\": \"root\",\n    \"password\": \"\",\n    \"charset\": \"utf8\"\n  },\n  \"dev\": {\n    \"dbname\": \"dev_ezframe\",\n    \"host\": \"192.168.10.25\",\n    \"port\": 3306,\n    \"username\": \"root\",\n    \"password\": \"motdepass\",\n    \"charset\": \"utf8\"\n  }\n}"
					}
				},
				{
					"id": "10RVT2sD71",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "-dj6e4uEzB",
					"type": "header",
					"data": {
						"text": "i18n.json",
						"level": 3
					}
				},
				{
					"id": "-5LPgP_9rj",
					"type": "paragraph",
					"data": {
						"text": "En d\u00e9veloppement de logiciel, l\u2019internationalisation1 (abr\u00e9g\u00e9 en i18n1, o\u00f9 18 repr\u00e9sente le nombre de caract\u00e8res entre le i et le n dans le mot) est la mise en place d\u2019un syst\u00e8me permettant la r\u00e9gionalisation du logiciel, c\u2019est-\u00e0-dire son adaptation \u00e0 des langues et des cultures diff\u00e9rentes. "
					}
				},
				{
					"id": "IoxYZm94j5",
					"type": "paragraph",
					"data": {
						"text": "L\u2019objectif de l\u2019internationalisation est donc de produire un programme unique qui puisse inclure plusieurs langues pour l\u2019interface."
					}
				},
				{
					"id": "lyVDfrMLFY",
					"type": "paragraph",
					"data": {
						"text": "<b>NB<\/b>: On peut \u00e9galement cr\u00e9er des fichier i18n dans les \"app\"&nbsp; qui seront donc agr\u00e9g\u00e9s \u00e0 celui-ci afin de disposer des diff\u00e9rentes traductions du site."
					}
				},
				{
					"id": "091lUiwHti",
					"type": "paragraph",
					"data": {
						"text": "Il se pr\u00e9sente sous la forme"
					}
				},
				{
					"id": "dl05-OsQFP",
					"type": "code",
					"data": {
						"code": "{\n\t\"CLE SERVANT A IDENTIFIER LE TEXTE A TRADUIRE\": {\n\t\t\"fr\": \"Traduction de ce texte en fran\u00e7ais\",\n\t\t\"es\": \"Traducci\u00f3n de este texto al espa\u00f1ol\",\n\t\t\"en\": \"Translation of this text into English\"\n\t},\n\t\n}"
					}
				},
				{
					"id": "MRpDTu5dp-",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "UTiq4bBl1o",
					"type": "header",
					"data": {
						"text": "routes.json",
						"level": 3
					}
				},
				{
					"id": "XXfJvIoftM",
					"type": "paragraph",
					"data": {
						"text": "ce fichier permet de g\u00e9rer les routes \"par d\u00e9faut\" du site."
					}
				},
				{
					"id": "sVAELZWLzT",
					"type": "paragraph",
					"data": {
						"text": "En g\u00e9n\u00e9ral, on utilisera plut\u00f4t les fichiers de routes qui se trouvent \u00e0 la racine des \"app\""
					}
				},
				{
					"id": "2uBljhwTAb",
					"type": "paragraph",
					"data": {
						"text": "(voir chapitre sur le routing)<br>"
					}
				},
				{
					"id": "dGmFIb9Pem",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "5XDBEU-5dU",
					"type": "header",
					"data": {
						"text": "site_config.json",
						"level": 3
					}
				},
				{
					"id": "yMN65AQa-k",
					"type": "paragraph",
					"data": {
						"text": "Ce fichier sert \u00e0 stocker des variables utiles pour le fonctionnement du site et ou des applications."
					}
				},
				{
					"id": "N7AUHuZjjY",
					"type": "code",
					"data": {
						"code": "{\n\t\"debug\": true,\n\t\"autodebug\": false,\n\t\"title\": \"Framework Sidunis\",\n\t\"core\": {\n\t\t\"path\": \"cores\/core\/\"\n\t},\n\t\"documentation\": {\n\t\t\"editmode\": false\n\t},\n\t\"twig\": {\n\t\t\"templates\": \"templates\/\",\n\t\t\"extensions\": [\"\\\\Core\\\\Twig\\\\TranslatorExtension\", \"\\\\Twig\\\\Extra\\\\Inky\\\\InkyExtension\"]\n\t},\n\t\"rootUrl\": \"\/\",\n\t\"domain\": {\n\t\t\"dev\": \"https:\/\/dev.example.com\",\n\t\t\"prod\": \"https:\/\/www.example.com\"\n\t},\n\t\"expiration_session\": \"+ 1 day\"\n}"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence.config"
	},
	"templating": {
		"title": "Moteur de templating TWIG",
		"content": {
			"time": 1682685190460,
			"blocks": [
				{
					"id": "ECbrwWrTlN",
					"type": "paragraph",
					"data": {
						"text": "Pour g\u00e9rer nos vues HTML nous utilisons le moteur de templating de Symfony : TWIG"
					}
				},
				{
					"id": "lZDJF1sSFl",
					"type": "paragraph",
					"data": {
						"text": "Les templates sont stock\u00e9s dans le r\u00e9pertoire \"\/templates\"<br>Lorsque vous devrez sp\u00e9cifier le chemin d'un template TWIG, il devra \u00eatre <b>imp\u00e9rativement <\/b>relatif \u00e0 ce r\u00e9pertoire.<br>"
					}
				},
				{
					"id": "ak-ImWBnLE",
					"type": "paragraph",
					"data": {
						"text": "Pour faire le rendu en HTML d'un fichier TWIG depuis un contr\u00f4leur :"
					}
				},
				{
					"id": "CoU_izeDx4",
					"type": "code",
					"data": {
						"code": "<?php\nnamespace App\\Example\\Controller;\nuse Core\\Controller;\nclass MenuController extends Controller\n{\n  public function exampleRenderHtml(){\n    \/\/Le code ci-dessous fera le rendu en html du fichier \/templates\/chemin\/vers\/template.html.twig\n    $html = $this->twig->render(\"chemin\/vers\/template.html.twig\",[\"data1\" => 1, \"data2\" => \"merci\"]);\n    \/\/ code avec $html...\n  }\n}\n"
					}
				},
				{
					"id": "93uQdRpGKu",
					"type": "paragraph",
					"data": {
						"text": "Dans le cas o\u00f9 vous auriez besoin de faire du rendu en dehors d'un contr\u00f4leur, il faudra d'abord r\u00e9cup\u00e9rer l'environnement TWIG, comme ceci :"
					}
				},
				{
					"id": "_0zl4u_wMe",
					"type": "code",
					"data": {
						"code": "$twigEnv = \\Core\\Common\\Site::getTwigEnvironnment();\n$html = $twigEnv->render(\"chemin\/vers\/template.html.twig\",[\"data1\" => 1, \"data2\" => \"merci\"]);"
					}
				},
				{
					"id": "LAM4ojCErs",
					"type": "paragraph",
					"data": {
						"text": "Notre exemple de fichier TWIG :"
					}
				},
				{
					"id": "9Dfr0K9FJR",
					"type": "code",
					"data": {
						"code": "{# \/templates\/chemin\/vers\/template.html.twig #}\n<div>\n  <p>\n    Mon num\u00e9ro f\u00e9tiche est le num\u00e9ro {{data1}}\n    Et je vous dis {{data2}}\n  <\/p>\n<\/div>"
					}
				},
				{
					"id": "qtk3atbl8r",
					"type": "paragraph",
					"data": {
						"text": "sera transform\u00e9 en :"
					}
				},
				{
					"id": "BW0XBCriyg",
					"type": "code",
					"data": {
						"code": "<div>\n  <p>\n    Mon num\u00e9ro f\u00e9tiche est le num\u00e9ro 1\n    Et je vous dis merci\n  <\/p>\n<\/div>"
					}
				},
				{
					"id": "Ntq1gCCIgz",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "vFnVPvDbPF",
					"type": "header",
					"data": {
						"text": "Usage habituel dans le contr\u00f4leur",
						"level": 4
					}
				},
				{
					"id": "DNS9cOzTRZ",
					"type": "paragraph",
					"data": {
						"text": "Dans un contr\u00f4leur, nous utilisons la fonction h\u00e9rit\u00e9 de la classe \"\\Core\\Controller\" : \"display\".<br>Celle-ci fais le rendu du HTML et l'affiche juste apr\u00e8s dans le navigateur. Tout code \u00e9cris apr\u00e8s ne sera pas \u00e9xecut\u00e9"
					}
				},
				{
					"id": "lGe2ql9s07",
					"type": "code",
					"data": {
						"code": "<?php\nnamespace App\\Example\\Controller;\nuse Core\\Controller;\nclass ExampleController extends Controller\n{\n  public function exampleRenderHtml()\n  {\n    return $this->display(\"chemin\/vers\/template.html.twig\",[\"data1\" => 1,\"data2\" => \"merci\"]);\n  }\n}\n"
					}
				},
				{
					"id": "cqcLIWt89e",
					"type": "paragraph",
					"data": {
						"text": "Habituellement nous ne renseignons pas les param\u00e8tres de cette fonction, car nous les sp\u00e9cifions ailleurs."
					}
				},
				{
					"id": "XACAKQk_GP",
					"type": "paragraph",
					"data": {
						"text": "Nous pouvons sp\u00e9cifier le template directement dans la route :"
					}
				},
				{
					"id": "91MXVnE_yq",
					"type": "code",
					"data": {
						"code": "{\n  \"\/exemple\/\": {\n    \"alias\": \"example\",\n    \"vars\": {\n      \"p\": \"example:example:exampleRenderHtml\",\n      \"template\": \"chemin\/vers\/template.html.twig\"\n    }\n  }\n}"
					}
				},
				{
					"id": "31JLU_zHfK",
					"type": "paragraph",
					"data": {
						"text": "Ou en tant que propri\u00e9t\u00e9 du contr\u00f4leur :"
					}
				},
				{
					"id": "pL5xpSdMPY",
					"type": "code",
					"data": {
						"code": "namespace App\\Example\\Controller;\nuse Core\\Controller;\nclass ExampleController extends Controller\n{\n  protected $template = \"chemin\/vers\/template.html.twig\";\n  public function exampleRenderHtml()\n  {\n    return $this->display(null,[\"data1\" => 1,\"data2\" => \"merci\"]);\n  }\n}\n"
					}
				},
				{
					"id": "r3sPDsVPgb",
					"type": "paragraph",
					"data": {
						"text": "Quand aux datas, nous pouvons les sp\u00e9cifier au fur et \u00e0 mesure dans la propri\u00e9t\u00e9 \"datas\" du contr\u00f4leur, comme ceci :<br>"
					}
				},
				{
					"id": "dVjbOS0nhg",
					"type": "code",
					"data": {
						"code": "namespace App\\Example\\Controller;\nuse Core\\Controller;\nclass ExampleController extends Controller\n{\n  protected $template = \"chemin\/vers\/template.html.twig\";\n  public function exampleRenderHtml()\n  {\n    $this->datas[\"data1\"] = 1;\n    $this->datas[\"data2\"] = \"merci\";\n    return $this->display();\n  }\n}"
					}
				},
				{
					"id": "FfIMDjFQFL",
					"type": "paragraph",
					"data": {
						"text": "Pour plus d'informations concernant la syntaxe \u00e0 utiliser dans les fichiers TWIG, veuillez consulter <a href=\"https:\/\/twig.symfony.com\/doc\/\">la documentation officielle<\/a>.<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "templating"
	},
	"pour-commencer.arborescence.assets": {
		"title": "Assets ( Ressources )",
		"content": {
			"time": 1685457564063,
			"blocks": [
				{
					"id": "uRJ74un3S9",
					"type": "paragraph",
					"data": {
						"text": "Le dossier \"assets\"&nbsp; sert \u00e0 stocker tous les fichiers \"publics\". ce sont les ressources du site, tels que les fichiers javascript, les fichiers css, les images.."
					}
				},
				{
					"id": "Viky3Td2Mi",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/644bbc27719cf.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				},
				{
					"id": "hCZRe5ERAg",
					"type": "paragraph",
					"data": {
						"text": "NB: Dans les templates, il est possible d'aller chercher les assets en utilisant des variables pr\u00e9-d\u00e9finies. Le chemin du fichier doit \u00eatre relatif au dossier assets<br>"
					}
				},
				{
					"id": "TAVMwqsYBC",
					"type": "paragraph",
					"data": {
						"text": "par exemple :"
					}
				},
				{
					"id": "AmwO1HHk9Y",
					"type": "code",
					"data": {
						"code": "    <img src=\"{{asset(\"undossierimage\/icons\/ic-wrench.svg\")}}\" ...>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence.assets"
	},
	"templating.macros": {
		"title": "Fonctions et filtres TWIG sp\u00e9cifiques au Framework",
		"content": {
			"time": 1682692844286,
			"blocks": [
				{
					"id": "iGApZf6WZZ",
					"type": "header",
					"data": {
						"text": "Pr\u00e9ambule",
						"level": 4
					}
				},
				{
					"id": "nf5YwrNsPu",
					"type": "paragraph",
					"data": {
						"text": "Cette rubrique va traiter des fonctions et filtres qui sont sp\u00e9cifiques au framework, pour les fonctions et filtres natives \u00e0 TWIG, veuillez vous r\u00e9f\u00e9rer \u00e0 la <a href=\"https:\/\/twig.symfony.com\/doc\/3.x\/\">documentation officielle<\/a>"
					}
				},
				{
					"id": "BJftwu0kFv",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "DT3JFFyOCI",
					"type": "header",
					"data": {
						"text": "Filtres",
						"level": 4
					}
				},
				{
					"id": "89tOUzp3Ud",
					"type": "paragraph",
					"data": {
						"text": "<b>json_decode<\/b><b><\/b><br>M\u00eame fonctionnement que&nbsp; <a href=\"https:\/\/www.php.net\/manual\/fr\/function.json-decode.php\">la fonction PHP du m\u00eame nom<\/a> mais sous forme de filtre<br>"
					}
				},
				{
					"id": "-ttMK4tCzs",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Param\u00e8tre",
								"Type",
								"Valeur par d\u00e9faut<br>",
								"Commentaire"
							],
							[
								"$json",
								"string",
								"\u274c",
								"La cha\u00eene de caract\u00e8re JSON<br>"
							],
							[
								"$associative",
								"bool",
								"false",
								"Retourne un objet stdClass si false, un tableau associatif si true<br>"
							],
							[
								"$depth",
								"int",
								"512",
								"Profondeur de traitement de la cha\u00eene<br>"
							],
							[
								"$flags",
								"int",
								"0",
								"\nMasque de bit compris de\n       JSON_BIGINT_AS_STRING,\n       JSON_INVALID_UTF8_IGNORE,\n       JSON_INVALID_UTF8_SUBSTITUTE,\n       JSON_OBJECT_AS_ARRAY,\n       JSON_THROW_ON_ERROR. <br>"
							]
						]
					}
				},
				{
					"id": "zMv7Q4pTCC",
					"type": "code",
					"data": {
						"code": "{% set jsonString = \"{\\\"1+1\\\":\\\"2\\\",\\\"2+2\\\":\\\"4\\\"}\"  %}\n<ul>\n  {% for operation,resultat in jsonString|json_decode(true) %}\n    <li>{{operation}} = {{resultat}}<\/li>\n  {% endfor %}\n<\/ul>\n\n{# Retourne : #}\n<ul>\n  <li>1+1 = 2<\/li>\n  <li>2+2 = 4<\/li>\n<\/ul>"
					}
				},
				{
					"id": "YsEb84_aur",
					"type": "paragraph",
					"data": {
						"text": "&nbsp;"
					}
				},
				{
					"id": "zkeDJJDrMW",
					"type": "paragraph",
					"data": {
						"text": "<b>mois<br><\/b>Retourne le nom du mois en fonction du num\u00e9ro de mois fourni <b><br><\/b>"
					}
				},
				{
					"id": "15FjeU1smR",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Param\u00e8tre",
								"Type",
								"Valeur par d\u00e9faut<br>",
								"Commentaire"
							],
							[
								"$numero",
								"int|string",
								"\u274c",
								"De 1 \u00e0 12, 1 retourne janvier, 12 retourne d\u00e9cembre<br>"
							],
							[
								"$capitalized",
								"bool",
								"false",
								"Retourne le nom du mois capitalis\u00e9 sur true<br>"
							]
						]
					}
				},
				{
					"id": "rj1T28t8oD",
					"type": "code",
					"data": {
						"code": "{% set date_noel = \"2023-12-25\" %}\n<span>No\u00ebl 2023 se passera sans surprise fin {{date_noel|date('n')|mois}}<\/span>\n\n{# Retourne #}\n\n<span>No\u00ebl 2023 se passera sans surprise fin d\u00e9cembre<\/span>"
					}
				},
				{
					"id": "9nq18Yv08P",
					"type": "paragraph",
					"data": {
						"text": "&nbsp;"
					}
				},
				{
					"id": "k9bHh4RdWh",
					"type": "paragraph",
					"data": {
						"text": "<b>jour<br><\/b>Retourne le nom du jour en fonction du num\u00e9ro de jour fourni"
					}
				},
				{
					"id": "cQOxSL0fVd",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Param\u00e8tre",
								"Type",
								"Valeur par d\u00e9faut",
								"Commentaire"
							],
							[
								"$numero",
								"int|string",
								"\u274c",
								"De 1 \u00e0 7, 1 retourne lundi, 7 retourne dimanche<br>"
							],
							[
								"$capitalized",
								"bool",
								"false",
								"Retourne le nom du jour capitalis\u00e9 sur true"
							]
						]
					}
				},
				{
					"id": "tfgmwTXh2F",
					"type": "code",
					"data": {
						"code": "{% set date_noel = \"2023-12-25\" %}\n<span>No\u00ebl 2023 se passera un {{date_noel|date('N')|jour}}<\/span>\n\n{# Retourne #}\n\n<span>No\u00ebl 2023 se passera un lundi<\/span>"
					}
				},
				{
					"id": "qaPpXR5nqw",
					"type": "paragraph",
					"data": {
						"text": "&nbsp;"
					}
				},
				{
					"id": "IaiKExsEqo",
					"type": "paragraph",
					"data": {
						"text": "<b>date_literale<br><\/b>Retourne une date compl\u00e8te en fran\u00e7ais, r\u00e9utilise les deux fonctions ci-dessus dans son fonctionnement<b><br><\/b>"
					}
				},
				{
					"id": "Y1EFbAwe_j",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Param\u00e8tre",
								"Type",
								"Valeur par d\u00e9faut<br>",
								"Commentaire"
							],
							[
								"$date",
								"string",
								"\u274c",
								"La date \u00e0 convertir en texte<br>"
							],
							[
								"$jourCapitalized",
								"bool",
								"false",
								"Si true, le jour sera capitalis\u00e9<br>"
							],
							[
								"$moisCapitalized",
								"bool",
								"false",
								"Si true, le mois sera capitaliz\u00e9<br>"
							]
						]
					}
				},
				{
					"id": "65Nogl2rJu",
					"type": "code",
					"data": {
						"code": "{% set date_noel = \"2023-12-25\" %}\n<span>Date de no\u00eal 2023 : {{date_noel|date_literale(true,true)}}<\/span>\n\n{# Retourne #}\n\n<span>Date de no\u00eal 2023 : Lundi 25 D\u00e9cembre 2023<\/span>"
					}
				},
				{
					"id": "j8sbplIhVr",
					"type": "paragraph",
					"data": {
						"text": "<b>sum<\/b>"
					}
				},
				{
					"id": "H15V_8GmTc",
					"type": "paragraph",
					"data": {
						"text": "<b>match<\/b>"
					}
				},
				{
					"id": "0nlj-455Er",
					"type": "paragraph",
					"data": {
						"text": "<b>strip_accents<\/b>"
					}
				},
				{
					"id": "ogZr-4MoIk",
					"type": "paragraph",
					"data": {
						"text": "<b>group<\/b>"
					}
				},
				{
					"id": "hUJThpfq2J",
					"type": "paragraph",
					"data": {
						"text": "<b>preg_replace<\/b>"
					}
				},
				{
					"id": "VPt5v1FIwd",
					"type": "paragraph",
					"data": {
						"text": "<b>time_format<\/b>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "templating.macros"
	},
	"templating.constantes": {
		"title": "Constantes Twig",
		"content": {
			"time": 1682686854351,
			"blocks": [],
			"version": "2.26.5"
		},
		"fullPath": "templating.constantes"
	},
	"routing": {
		"title": "Routes",
		"content": {
			"time": 1686669618378,
			"blocks": [
				{
					"id": "_MWS_Mjgj9",
					"type": "paragraph",
					"data": {
						"text": "Il faut cr\u00e9er un fichier dans le \"module\" (application) portant le nom&nbsp; routes_cequonveut.json"
					}
				},
				{
					"id": "wkbRfXH989",
					"type": "paragraph",
					"data": {
						"text": "Il faut renseigner l'URL qui serat utilis\u00e9e pour atteindre cette route ainsi que son alias et les variables permettant d'indiquer l'app, le controlleur et la fonction appell\u00e9e."
					}
				},
				{
					"id": "qAi-V0_qOk",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/646c874d44650.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "routing"
	},
	"premier-module.controller": {
		"title": "Le contr\u00f4leur",
		"content": {
			"time": 1686300583755,
			"blocks": [
				{
					"id": "gFLtm6CiF1",
					"type": "paragraph",
					"data": {
						"text": "Un contr\u00f4leur est une composante cl\u00e9 charg\u00e9e de g\u00e9rer les requ\u00eates HTTP entrantes et de contr\u00f4ler le flux de l'application. Son r\u00f4le principal est de recevoir les requ\u00eates des utilisateurs, d'effectuer les actions n\u00e9cessaires et de renvoyer une r\u00e9ponse appropri\u00e9e."
					}
				},
				{
					"id": "r5vohzLrEX",
					"type": "paragraph",
					"data": {
						"text": "Voici quelques-unes des principales fonctions d'un contr\u00f4leur dans EzFrame :"
					}
				},
				{
					"id": "kXzz5AAHBI",
					"type": "list",
					"data": {
						"style": "ordered",
						"items": [
							"Gestion des routes : Un contr\u00f4leur est associ\u00e9 \u00e0 une ou plusieurs routes d\u00e9finies dans le fichier de configuration routes(_xxx).json de l'application. Il re\u00e7oit les requ\u00eates HTTP correspondant \u00e0 ces routes et d\u00e9termine les actions \u00e0 entreprendre.",
							"Traitement des requ\u00eates : Le contr\u00f4leur analyse les param\u00e8tres de la requ\u00eate (tels que les param\u00e8tres d'URL, les donn\u00e9es de formulaire, les en-t\u00eates, etc.) et effectue les op\u00e9rations n\u00e9cessaires pour r\u00e9pondre \u00e0 la demande de l'utilisateur. Cela peut inclure la r\u00e9cup\u00e9ration ou la manipulation de donn\u00e9es \u00e0 partir d'une base de donn\u00e9es, l'appel de services ou la gestion de la logique m\u00e9tier.",
							"Renvoi de la r\u00e9ponse : Une fois que le contr\u00f4leur a termin\u00e9 le traitement de la requ\u00eate, il renvoie une r\u00e9ponse au client. Cela peut \u00eatre sous la forme d'une page HTML g\u00e9n\u00e9r\u00e9e (TWIG), d'un document JSON (jsonResponse,successResponse,errorResponse), d'un fichier t\u00e9l\u00e9chargeable ou de tout autre format de r\u00e9ponse appropri\u00e9 \u00e0 la demande.",
							"Int\u00e9gration avec les vues : Dans le mod\u00e8le MVC (Mod\u00e8le-Vue-Contr\u00f4leur) de EzFrame, le contr\u00f4leur est responsable de l'interm\u00e9diation entre les donn\u00e9es du mod\u00e8le et la vue qui les affiche. Il peut transmettre les donn\u00e9es n\u00e9cessaires \u00e0 une vue sp\u00e9cifique et g\u00e9rer les \u00e9ventuelles redirections vers d'autres vues.",
							"Gestion des erreurs : Les contr\u00f4leurs peuvent \u00e9galement g\u00e9rer les erreurs survenues lors du traitement des requ\u00eates. Ils peuvent renvoyer des r\u00e9ponses d'erreur appropri\u00e9es ou rediriger vers des pages d'erreur sp\u00e9cifiques."
						]
					}
				},
				{
					"id": "SV9sgauslR",
					"type": "paragraph",
					"data": {
						"text": "En r\u00e9sum\u00e9, les contr\u00f4leurs dans Symfony jouent un r\u00f4le crucial dans la gestion des requ\u00eates, l'ex\u00e9cution des actions n\u00e9cessaires et le renvoi des r\u00e9ponses. Ils permettent de structurer le code de l'application en suivant le mod\u00e8le MVC et facilitent le d\u00e9veloppement d'applications Web robustes et modulaires."
					}
				},
				{
					"id": "7j3_AxsJ1p",
					"type": "paragraph",
					"data": {
						"text": "L'emplacement d'un contr\u00f4leur sera toujours dans le dossier \"Controller\" \u00e0 la racine de votre module (Attention \u00e0 la casse!)"
					}
				},
				{
					"id": "yTszVtLyud",
					"type": "paragraph",
					"data": {
						"text": "Le nom du fichier et la classe contenue dans ce dernier doivent correspondre.<br>Ils ont toujours ce format : [Sujet]Controller"
					}
				},
				{
					"id": "O002_A4kVQ",
					"type": "paragraph",
					"data": {
						"text": "Exemple ci-dessous<br>"
					}
				},
				{
					"id": "356J4iZ4cP",
					"type": "code",
					"data": {
						"code": "app\/\n\u2514\u2500\u2500 AdminEquipes\/\n    \u2514\u2500\u2500 Controller\/\n        \u2514\u2500\u2500 EquipesController.php"
					}
				},
				{
					"id": "d2ZTM-HYWV",
					"type": "code",
					"data": {
						"code": "<?php\n\nnamespace App\\AdminEquipes\\Controller;\n\nclass EquipesController extends \\Core\\Controller\n{\n  public function render()\n  {\n    echo '\u00e7a marche !';\n    exit;\n  }\n}\n"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "premier-module.controller"
	},
	"premier-module.template": {
		"title": "Les Templates de mon app",
		"content": {
			"time": 1684836708111,
			"blocks": [
				{
					"id": "5tnANwiBrc",
					"type": "paragraph",
					"data": {
						"text": "Pour indiquer le template \u00e0 utiliser lors de l'affichage, plusieurs possibilit\u00e9s :"
					}
				},
				{
					"id": "7u0CQ2qtrf",
					"type": "paragraph",
					"data": {
						"text": "1 - Mettre le template dans la route (via la variable \"t\" )"
					}
				},
				{
					"id": "skPNNQJ6cb",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/646c8c7b10ce6.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				},
				{
					"id": "tq39zgsnZG",
					"type": "paragraph",
					"data": {
						"text": "2 - D\u00e9finir le template dans une propri\u00e9t\u00e9 du controller."
					}
				},
				{
					"id": "QcYNe-riTT",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/646c8ee58073c.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				},
				{
					"id": "vQRigPJRa3",
					"type": "paragraph",
					"data": {
						"text": "3 - D\u00e9finir le template en param\u00e8tre de la fonction display"
					}
				},
				{
					"id": "zBZBMYtfBG",
					"type": "image",
					"data": {
						"file": {
							"url": "\/documentation\/app\/Documentation\/assets\/upload\/images\/646c915ba7621.png"
						},
						"caption": "",
						"withBorder": false,
						"stretched": false,
						"withBackground": false
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "premier-module.template"
	},
	"pour-commencer.schema_bdd": {
		"title": "Sch\u00e9ma de la base donn\u00e9es",
		"content": {
			"time": 1686663746745,
			"blocks": [
				{
					"id": "axZH3eK1Gs",
					"type": "paragraph",
					"data": {
						"text": "Depuis la version 1.5.x du Framework<br>Il est possible de g\u00e9n\u00e9rer les bases de donn\u00e9es depuis des sch\u00e9mas d\u00e9finis au format JSON.<br>La mise \u00e0 jour des tables peut alors \u00eatre lanc\u00e9e avec cette commande<br>"
					}
				},
				{
					"id": "51cBnCZ0yo",
					"type": "code",
					"data": {
						"code": "\/\/Version < 1.6.x du framework\nphp vendor\/groupefbo\/ezframe\/bin\/generateSchema.php\n\n\/\/Version >= 1.6.x du framework\nphp bin\/ezframe core:generateSchema"
					}
				},
				{
					"id": "DrJBEzBqcu",
					"type": "paragraph",
					"data": {
						"text": "Les sch\u00e9mas de table par d\u00e9faut se trouvent dans \"config\/schema\/\""
					}
				},
				{
					"id": "YdkQrrKXZP",
					"type": "paragraph",
					"data": {
						"text": "Il est possible d'en ajouter dans les modules de la m\u00eame fa\u00e7on que les routes en les ajoutant dans \"app\/MonModule\/schema\/\""
					}
				},
				{
					"id": "MVX3AeayEz",
					"type": "paragraph",
					"data": {
						"text": "Le fichier devra avoir le m\u00eame nom que la table qu'il cr\u00e9\u00e9 dans la base de donn\u00e9es, exemple : un sch\u00e9ma devant cr\u00e9er la table \"user\" doit d'appeler \"user.json\""
					}
				},
				{
					"id": "JShPO-hfjb",
					"type": "paragraph",
					"data": {
						"text": "Le contenu d'un des ces fichiers ressemble \u00e0 ceci <br>"
					}
				},
				{
					"id": "P7TZyTPyKo",
					"type": "code",
					"data": {
						"code": "{\n  \"name\": \"sessions\", \/\/nom de la table\n  \"columns\": [ \/\/colonnes dans un tableau\n    {\n      \"name\": \"id\", \/\/nom de la colonne \n      \"type\": \"BIGINT\", \/\/type de la colonne\n      \"autoIncrement\": true, \/\/Auto-incr\u00e9ment si besoin\n      \"primary\": true, \/\/Cl\u00e9 primaire\n      \"null\": false, \/\/Non nullable\n      \"unsigned\": true, \/\/Pour ne pas avoir de valeur n\u00e9gative\n      \"comment\": \"Identifiant de la session\" \/\/Pour d\u00e9crire un peu l'utilit\u00e9 de la colonne\n    }, \n    \/\/...\n  ],\n  \"comment\": \"Table des sessions utilisateurs\" \/\/commentaire pour d\u00e9crire la table\n}"
					}
				},
				{
					"id": "qv7926lZcT",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "Ko6z5sOh7X",
					"type": "header",
					"data": {
						"text": "Propri\u00e9t\u00e9s d'une table",
						"level": 4
					}
				},
				{
					"id": "a-OEdsn_Ry",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom<br>",
								"Type<br>",
								"Valeur par d\u00e9faut<br>",
								"Commentaire"
							],
							[
								"name",
								"string",
								"\u274c",
								"Nom de la table<br>"
							],
							[
								"columns",
								"array",
								"\u274c",
								"Colonnes du tableau, leur contenu est sp\u00e9cifi\u00e9 plus bas<br>"
							],
							[
								"comment",
								"string<br>",
								"\"\"<br>",
								"Commentaire pour d\u00e9crire la table<br>"
							],
							[
								"engine",
								"string",
								"\"InnoDB\"",
								"Moteur utilis\u00e9<br>"
							],
							[
								"charset",
								"string",
								"\"utf8mb4\"",
								"Codage des caract\u00e8res<br>"
							],
							[
								"collation",
								"string",
								"\"utf8mb4_unicode_ci\"",
								"Configuration de tri et comparaison des caract\u00e8res<br>"
							],
							[
								"renameFrom",
								"array|string|null",
								"null",
								"Ancien(s) nom(s) de la table, permet de la renommer et de garder ses donn\u00e9es au lieu de cr\u00e9er une nouvelle table<br>"
							]
						]
					}
				},
				{
					"id": "cEZrd2i0AL",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "ga3LuZ5meL",
					"type": "header",
					"data": {
						"text": "Propri\u00e9t\u00e9s d'une colonne",
						"level": 3
					}
				},
				{
					"id": "PFFByfOdV4",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom",
								"Type",
								"Valeur par d\u00e9faut<br>",
								"Commentaire"
							],
							[
								"name",
								"string",
								"\u274c",
								"Nom de la colonne<br>"
							],
							[
								"type",
								"string",
								"\u274c",
								"Type de la colonne<br>"
							],
							[
								"length",
								"int|string|null",
								"null",
								"Longueur de la colonne<br>"
							],
							[
								"default",
								"int|string|null",
								"null",
								"Valeur par d\u00e9faut de la colonne<br>"
							],
							[
								"onUpdate",
								"int|string|null",
								"null",
								"Valeur de la colonne \u00e0 la mise \u00e0 jour de la ligne<br>"
							],
							[
								"comment",
								"string|null",
								"null",
								"Commentaire de la colonne<br>"
							],
							[
								"null",
								"bool",
								"false",
								"Colonne nullable<br>"
							],
							[
								"autoIncrement",
								"bool",
								"false",
								"Auto-incr\u00e9mentation"
							],
							[
								"primary",
								"bool",
								"false",
								"Si true, la colonne sera une cl\u00e9 primaire<br>"
							],
							[
								"unique",
								"bool",
								"false",
								"Si true, la colonne sera unique<br>"
							],
							[
								"index",
								"bool",
								"false",
								"Si true, la colonne sera un index<br>"
							],
							[
								"unsigned",
								"bool",
								"false",
								"Si true, la colonne ne pourra pas avoir une valeur n\u00e9gative<br>"
							],
							[
								"referenceColumn",
								"string|null",
								"null",
								"Colonne de r\u00e9f\u00e9rence en cas de cl\u00e9 \u00e9trang\u00e8re<br>"
							],
							[
								"referenceTable",
								"string|null",
								"null",
								"Table de r\u00e9f\u00e9rence en cas de cl\u00e9 \u00e9trang\u00e8re<br>"
							],
							[
								"cascadeOnDelete",
								"bool",
								"false",
								"Si true, cette ligne sera supprim\u00e9e si la ligne r\u00e9f\u00e9renc\u00e9e l'est aussi<br>"
							],
							[
								"cascadeOnUpdate",
								"bool",
								"false",
								"Si true, cette colonne sera mise \u00e0 jour avec la nouvelle valeur de la colonne de la ligne r\u00e9f\u00e9renc\u00e9e si elle est chang\u00e9e<br>"
							],
							[
								"enumValues",
								"array|null",
								"null",
								"Valeurs possibles, obligatoire si le type est \"ENUM\"<br>"
							],
							[
								"renameFrom",
								"array|string|null",
								"null",
								"Ancien(s) nom(s) de la colonne, permet le renommage de la colonne avec son nouveau nom (d\u00e9fini dans \"name\") sans perdre de donn\u00e9es<br>"
							]
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.schema_bdd"
	},
	"pour-commencer.constantes": {
		"title": "Constantes",
		"content": {
			"time": 1685113035241,
			"blocks": [
				{
					"id": "0mhTfmc157",
					"type": "paragraph",
					"data": {
						"text": "Voici des constantes accessibles depuis n'importe quelle partie du Framework"
					}
				},
				{
					"id": "k21iXVHu0n",
					"type": "table",
					"data": {
						"withHeadings": false,
						"content": [
							[
								"Nom",
								"Type",
								"Description"
							],
							[
								"ROOT_DIR",
								"string",
								"Chemin complet du r\u00e9pertoire contenant le projet, se termine par un \"\/\"<br>"
							],
							[
								"APP_DIR",
								"string",
								"Chemin complet du r\u00e9pertoire \"app\" contenant les modules, se termine par un \"\/\""
							],
							[
								"LIBRARY_DIR",
								"string",
								"Chemin complet du r\u00e9pertoire contenant les fichiers de la librarie du framework dans vendor, se termine par un \"\/\"<br>"
							],
							[
								"TEMPLATES",
								"string",
								"R\u00e9pertoire par d\u00e9faut des templates, d\u00e9fini dans config\/site_config.json \u00e0 \"twig.templates\""
							],
							[
								"SITE_TITLE",
								"string",
								"Titre du site, d\u00e9fini dans config\/site_config.json \u00e0 \"title\"<br>"
							],
							[
								"DEBUG",
								"bool",
								"\u00c9tat de l'affichage du debug sur les pages du site, d\u00e9fini dans config\/site_config.json \u00e0 \"debug\"<br>"
							],
							[
								"AUTODEBUG",
								"bool",
								"Si true, ajoute automatiquement le param\u00e8tre GET xdebug=1 \u00e0 toutes les URLS, pour afficher le debug automatiquement, d\u00e9fini dans config\/site_config.json \u00e0 \"autodebug\""
							],
							[
								"ROOT_URL",
								"string",
								"Url relative au domaine de la racine du site, calcul\u00e9 automatiquement si requ\u00eate Web.<br>Si lanc\u00e9 depuis la console, il prends la valeur d\u00e9finie dans config\/site_config.json \u00e0 \"rootUrl\"<br>"
							],
							[
								"LIBRARY_URL",
								"string",
								"Url relative au domaine du r\u00e9pertoire contenant les fichiers librairie du framework, calcul\u00e9 \u00e0 partir de ROOT_URL<br>"
							],
							[
								"DOMAIN",
								"string",
								"Domaine complet du site, contient le protocole (http,https)<br>Calcul\u00e9 automatiquement si requ\u00eate Web.<br>Si lanc\u00e9 depuis la console, il prends la valeur d\u00e9finie dans config\/site_config.json \u00e0 \"domain.$ENV\" (ou $ENV est l'environnement d\u00e9finie dans .env \u00e0 la racine du site)<br>"
							]
						]
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.constantes"
	},
	"bdd.class": {
		"title": "La classe \/Core\/Db",
		"content": {
			"time": 1685113289202,
			"blocks": [
				{
					"id": "DxXge7NXir",
					"type": "paragraph",
					"data": {
						"text": "Cette classe est parente de toutes nos classes Model, ainsi elles h\u00e9ritent toutes de ses fonctions<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "bdd.class"
	},
	"premier-module.models": {
		"title": "Le mod\u00e8le",
		"content": {
			"time": 1685460539679,
			"blocks": [
				{
					"id": "cRShf0gfZ-",
					"type": "paragraph",
					"data": {
						"text": "Dans le framework EzFrame, les mod\u00e8les sont utilis\u00e9s pour interagir avec la base de donn\u00e9es. Un mod\u00e8le est une classe qui \u00e9tend la classe de base \\Core\\Db et fournit des m\u00e9thodes pour effectuer des op\u00e9rations courantes telles que la r\u00e9cup\u00e9ration, la mise \u00e0 jour, l'ajout et la suppression de donn\u00e9es dans une table sp\u00e9cifique."
					}
				},
				{
					"id": "TZTHscO3RM",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "x8OnUAELjw",
					"type": "header",
					"data": {
						"text": "Cr\u00e9ation du mod\u00e8le",
						"level": 4
					}
				},
				{
					"id": "xOO00VEkZk",
					"type": "paragraph",
					"data": {
						"text": "Dans le dossier de votre module (app\/MonModule\/Model\/), cr\u00e9ez un fichier PHP pour votre mod\u00e8le. Par convention, vous pouvez nommer le fichier MyModel.php. Dans ce fichier, commencez par d\u00e9clarer votre classe en sp\u00e9cifiant le namespace \"App\\\", le nom de votre module suivi de \"Model\" puis du nom de votre class.<br>Par exemple :"
					}
				},
				{
					"id": "CGMYeZWr_G",
					"type": "code",
					"data": {
						"code": "namespace App\\MonModule\\Model;\n\nclass MyModel extends \\Core\\Db\n{\n    \/\/ Vos m\u00e9thodes de mod\u00e8le seront ajout\u00e9es ici\n}"
					}
				},
				{
					"id": "8Kft0rn1TK",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "Z2yQUiU_sT",
					"type": "header",
					"data": {
						"text": "D\u00e9finition des propri\u00e9t\u00e9s du mod\u00e8le",
						"level": 4
					}
				},
				{
					"id": "gsRhVks35P",
					"type": "paragraph",
					"data": {
						"text": "Dans votre mod\u00e8le, vous devez d\u00e9finir deux propri\u00e9t\u00e9s statiques : $pkey et $tbl. Ces propri\u00e9t\u00e9s sont n\u00e9cessaires pour que les m\u00e9thodes h\u00e9rit\u00e9es fonctionnent correctement."
					}
				},
				{
					"id": "v12i_NGDWn",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"$pkey : D\u00e9finissez cette propri\u00e9t\u00e9 comme le nom du champ cl\u00e9 primaire de votre table. Par exemple, si votre champ cl\u00e9 primaire est \"id\", vous pouvez l'initialiser comme suit :"
						]
					}
				},
				{
					"id": "pEdSBv7DxE",
					"type": "code",
					"data": {
						"code": "public static $pkey = 'id';\n"
					}
				},
				{
					"id": "z-NTot8oQq",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"$tbl : D\u00e9finissez cette propri\u00e9t\u00e9 comme le nom de votre table. Par exemple, si votre table s'appelle \"users\", vous pouvez l'initialiser comme suit :"
						]
					}
				},
				{
					"id": "cZvoQqAhnU",
					"type": "code",
					"data": {
						"code": "public static $tbl = 'users';"
					}
				},
				{
					"id": "GorbFdlJ-1",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "Tl1KMjw_qu",
					"type": "header",
					"data": {
						"text": "Utilisation des m\u00e9thodes h\u00e9rit\u00e9es",
						"level": 4
					}
				},
				{
					"id": "O5MUZmQG4C",
					"type": "paragraph",
					"data": {
						"text": "Votre mod\u00e8le h\u00e9rite des m\u00e9thodes statiques de la classe \\Core\\Db. Voici un aper\u00e7u des m\u00e9thodes h\u00e9rit\u00e9es et de leur utilisation dans un contr\u00f4leur par exemple :"
					}
				},
				{
					"id": "hTnM5YNMko",
					"type": "code",
					"data": {
						"code": "use App\\MonModule\\Model\\MyModel;\n\n\/\/ R\u00e9cup\u00e9rer tous les enregistrements de la table\n$listeEnregistrements = MyModel::getList();\n\n\/\/ R\u00e9cup\u00e9rer un enregistrement sp\u00e9cifique en fonction de la valeur d'un champ donn\u00e9\n$enregistrement = MyModel::getBy(1, 'id');\n\n\/\/ R\u00e9cup\u00e9rer tous les enregistrements correspondant \u00e0 une valeur sp\u00e9cifique dans un champ donn\u00e9\n$listeEnregistrements = MyModel::getAllBy('John', 'name');\n\n\/\/ Supprimer un enregistrement sp\u00e9cifique en fonction de la valeur d'un champ donn\u00e9\n$suppressionReussie = MyModel::removeBy(1, 'id');\n\n\/\/ Mettre \u00e0 jour un enregistrement sp\u00e9cifique en fonction de la valeur d'un champ donn\u00e9\n$donnees = ['nom' => 'John Doe', 'age' => 30];\n$miseAJourReussie = MyModel::updateBy(1, $donnees, 'id');\n\n\/\/ Ajouter un nouvel enregistrement\n$donnees = ['nom' => 'Jane Smith', 'age' => 25];\n$nouvelEnregistrementId = MyModel::add($donnees);"
					}
				},
				{
					"id": "HfuDaZ57ff",
					"type": "paragraph",
					"data": {
						"text": "Assurez-vous de remplacer 'id' par le nom du champ cl\u00e9 primaire de votre table et 'nom_de_la_table' par le nom de votre table dans les exemples ci-dessus."
					}
				},
				{
					"id": "bokli8D_L1",
					"type": "paragraph",
					"data": {
						"text": "Voil\u00e0! Vous avez maintenant cr\u00e9\u00e9 votre propre mod\u00e8le dans le framework EzFrame. Vous pouvez ajouter des m\u00e9thodes suppl\u00e9mentaires \u00e0 votre mod\u00e8le pour r\u00e9pondre aux besoins sp\u00e9cifiques de votre application. N'oubliez pas de consulter la documentation officielle du framework pour en savoir plus sur les fonctionnalit\u00e9s avanc\u00e9es et les bonnes pratiques de d\u00e9veloppement avec EzFrame."
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "premier-module.models"
	},
	"premier-module": {
		"title": "Premier module",
		"content": {
			"time": 1686299917284,
			"blocks": [
				{
					"id": "4IZic6xT3p",
					"type": "paragraph",
					"data": {
						"text": "Ici nous expliquerons comment cr\u00e9er son premier apr\u00e8s avoir install\u00e9 le framework<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "premier-module"
	},
	"pour-commencer.arborescence.app": {
		"title": "app\/",
		"content": {
			"time": 1686513152958,
			"blocks": [
				{
					"id": "VXMzCZ4khD",
					"type": "paragraph",
					"data": {
						"text": "Ce dossier contient vos modules<br>"
					}
				},
				{
					"id": "qcNYj6y0Bk",
					"type": "paragraph",
					"data": {
						"text": "Ces modules devront \u00eatre contenus dans des sous-dossiers au r\u00e9pertoire app, ces sous-dossiers devront \u00eatre nomm\u00e9 en PascalCase<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence.app"
	},
	"pour-commencer.arborescence.vendor": {
		"title": "vendor\/",
		"content": {
			"time": 1686513275224,
			"blocks": [
				{
					"id": "q2HgK6g9lW",
					"type": "paragraph",
					"data": {
						"text": "Ce dossier contient les diff\u00e9rentes librairies install\u00e9e avec Composer, dont le framework."
					}
				},
				{
					"id": "ar0K_77xl8",
					"type": "paragraph",
					"data": {
						"text": "Son contenu ne doit traditionnellement pas \u00eatre modifi\u00e9 car un composer update \u00e9crasera vos modifications<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence.vendor"
	},
	"pour-commencer.arborescence.templates": {
		"title": "templates\/",
		"content": {
			"time": 1686515102254,
			"blocks": [
				{
					"id": "I3JUpWA6aD",
					"type": "paragraph",
					"data": {
						"text": "A la racine du site, ce dossier contiendra les templates TWIG dont vous aurez besoin<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "pour-commencer.arborescence.templates"
	},
	"premier-module.routes": {
		"title": "Cr\u00e9ation des routes",
		"content": {
			"time": 1686515633176,
			"blocks": [
				{
					"id": "-U1mCJAMq7",
					"type": "paragraph",
					"data": {
						"text": "Pour ajouter une route, deux possibilit\u00e9s :"
					}
				},
				{
					"id": "s6jpD1aFon",
					"type": "list",
					"data": {
						"style": "unordered",
						"items": [
							"Ajouter la route au fichier config\/routes.json",
							"Cr\u00e9er votre propre fichier routes_xxxx.json \u00e0 la racine du module de votre et l'ajouter \u00e0 celui-ci<br>"
						]
					}
				},
				{
					"id": "dWpJsejeiS",
					"type": "paragraph",
					"data": {
						"text": "Le contenu de ce fichier doit avoir cette forme :<br>"
					}
				},
				{
					"id": "niMarTnbr_",
					"type": "code",
					"data": {
						"code": "{\n  \"\/admin\/\": {\n    \"sitemap\" : true,\n    \"alias\": \"admin-user\",\n    \"vars\": {\n      \"m\": \"Admin\",\n      \"c\": \"user\",\n      \"f\": \"render\"\n    }\n  },\n  \/\/autre route...\n}"
					}
				},
				{
					"id": "lIIW9p6VK-",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "premier-module.routes"
	},
	"fonctions.js": {
		"title": "Fonctions Javascript",
		"content": {
			"time": 1686519554357,
			"blocks": [
				{
					"id": "H2u-cGayZX",
					"type": "header",
					"data": {
						"text": "arrayIntersect",
						"level": 4
					}
				},
				{
					"id": "h8ZI1DvVYi",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;arrayIntersect&nbsp;permet de retourner un tableau contenant les \u00e9l\u00e9ments communs \u00e0 deux tableaux pass\u00e9s en param\u00e8tres. Elle prend en entr\u00e9e deux tableaux \u00e0 comparer."
					}
				},
				{
					"id": "g5fyUFDcX1",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "3SHRI7tqHQ",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"array1",
								"array",
								"Le premier tableau \u00e0 comparer."
							],
							[
								"array2",
								"array",
								"Le deuxi\u00e8me tableau \u00e0 comparer."
							]
						]
					}
				},
				{
					"id": "ze2G5rdHEz",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;arrayIntersect:"
					}
				},
				{
					"id": "njwvqg2mT-",
					"type": "code",
					"data": {
						"code": "const array1 = [1, 2, 3, 4, 5];\nconst array2 = [3, 4, 5, 6, 7];\n\nconsole.log(arrayIntersect(array1, array2)); \/\/ [3, 4, 5]"
					}
				},
				{
					"id": "qpkM0lqlt8",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "O8Q70pr4jm",
					"type": "header",
					"data": {
						"text": "createElement",
						"level": 4
					}
				},
				{
					"id": "VqtQ1qUB77",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;createElement&nbsp;permet de cr\u00e9er un \u00e9l\u00e9ment HTML avec des attributs, des styles, des donn\u00e9es et des enfants personnalis\u00e9s. Elle prend en entr\u00e9e un objet contenant les param\u00e8tres suivants:"
					}
				},
				{
					"id": "lCTyriRCag",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"tagName",
								"string",
								"Le nom de la balise HTML \u00e0 cr\u00e9er."
							],
							[
								"attrs",
								"object",
								"Un objet contenant les attributs \u00e0 ajouter \u00e0 l'\u00e9l\u00e9ment."
							],
							[
								"parent",
								"HTMLElement",
								"L'\u00e9l\u00e9ment parent de l'\u00e9l\u00e9ment cr\u00e9\u00e9."
							],
							[
								"dataset",
								"object",
								"Un objet contenant les donn\u00e9es \u00e0 ajouter \u00e0 l'\u00e9l\u00e9ment."
							],
							[
								"style",
								"object",
								"Un objet contenant les styles CSS \u00e0 ajouter \u00e0 l'\u00e9l\u00e9ment."
							],
							[
								"children",
								"Array",
								"Un tableau contenant les enfants de l'\u00e9l\u00e9ment. Chaque enfant peut \u00eatre soit un objet avec les m\u00eames param\u00e8tres que celui-ci, soit un \u00e9l\u00e9ment HTML."
							]
						]
					}
				},
				{
					"id": "97e19ch9f4",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;createElement&nbsp;retourne l'\u00e9l\u00e9ment HTML cr\u00e9\u00e9."
					}
				},
				{
					"id": "LU-g9L695S",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;createElement:"
					}
				},
				{
					"id": "PuFdBNHvdo",
					"type": "code",
					"data": {
						"code": "const myDiv = createElement({\n  tagName: 'div',\n  attrs: {\n    class: 'my-class',\n    id: 'my-id'\n  },\n  style: {\n    backgroundColor: 'red',\n    color: 'white'\n  },\n  dataset: {\n    myData: 'data-value'\n  },\n  children: [\n    {\n      tagName: 'p',\n      children: ['Hello, world!']\n    },\n    document.createElement('span')\n  ]\n});\n\ndocument.body.appendChild(myDiv);"
					}
				},
				{
					"id": "LTW4UM9vhN",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "YDkQsGpd_2",
					"type": "header",
					"data": {
						"text": "createPlaceholderFunction",
						"level": 4
					}
				},
				{
					"id": "xGxfxOtoyv",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;createPlaceholderFunction&nbsp;retourne une fonction qui s'appelle toutes les 0,25 secondes jusqu'\u00e0 ce qu'elle prenne une nouvelle valeur. Elle prend en entr\u00e9e un param\u00e8tre optionnel&nbsp;timer&nbsp;qui sp\u00e9cifie le temps en millisecondes entre chaque appel de la fonction."
					}
				},
				{
					"id": "fcNt1fTrnn",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "PyoTgymx8C",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"timer",
								"`number",
								"null"
							]
						]
					}
				},
				{
					"id": "bGY9WXrV0H",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;createPlaceholderFunction:"
					}
				},
				{
					"id": "CiGlWPngEH",
					"type": "code",
					"data": {
						"code": "const myFunction = createPlaceholderFunction(500);\n\n\/\/ Appelle la fonction toutes les 500 millisecondes\nmyFunction();"
					}
				},
				{
					"id": "OUGPtyn3tl",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "hVA96JPIRJ",
					"type": "header",
					"data": {
						"text": "debug",
						"level": 4
					}
				},
				{
					"id": "iG7jAfTaD1",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;debug&nbsp;permet de logguer une variable dans la console si la variable&nbsp;DEBUG&nbsp;est d\u00e9finie \u00e0&nbsp;true. Elle prend en entr\u00e9e deux param\u00e8tres: la variable \u00e0 logguer et un titre optionnel."
					}
				},
				{
					"id": "8BJ1rW4COB",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "c8QXAVKZnA",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"variable",
								"any",
								"La variable \u00e0 logguer."
							],
							[
								"titre",
								"any",
								"Le titre optionnel \u00e0 afficher dans la console."
							]
						]
					}
				},
				{
					"id": "5_SgQ4ijJb",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;debug:"
					}
				},
				{
					"id": "BaxT7tfQ98",
					"type": "code",
					"data": {
						"code": "const DEBUG = true;\n\nconst myVar = 'Hello, world!';\n\ndebug(myVar, 'My variable:'); \/\/ Affiche \"My variable: Hello, world!\" dans la console"
					}
				},
				{
					"id": "g9_YR4JCZU",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "3QOQQwqxe7",
					"type": "header",
					"data": {
						"text": "deepMerge",
						"level": 4
					}
				},
				{
					"id": "jo1QrsSJ8E",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;deepMerge&nbsp;permet de fusionner deux objets en un seul objet. Elle prend en entr\u00e9e deux objets et retourne un nouvel objet qui contient toutes les propri\u00e9t\u00e9s des deux objets d'origine."
					}
				},
				{
					"id": "oLYTrFdQ8y",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "SVAU_Z78vo",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"obj1",
								"object",
								"Le premier objet \u00e0 fusionner."
							],
							[
								"obj2",
								"object",
								"Le deuxi\u00e8me objet \u00e0 fusionner."
							]
						]
					}
				},
				{
					"id": "wbgUMMO9d8",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;deepMerge&nbsp;parcourt chaque propri\u00e9t\u00e9 de&nbsp;obj1&nbsp;et compare sa valeur \u00e0 la valeur correspondante dans&nbsp;obj2. Si la propri\u00e9t\u00e9 n'existe pas dans&nbsp;obj2, elle est ajout\u00e9e \u00e0 l'objet de sortie. Si la propri\u00e9t\u00e9 existe dans les deux objets et est elle-m\u00eame un objet, la fonction&nbsp;deepMerge&nbsp;est appel\u00e9e r\u00e9cursivement pour fusionner les deux objets. Sinon, la valeur de&nbsp;obj2&nbsp;est utilis\u00e9e pour remplacer la valeur de&nbsp;obj1."
					}
				},
				{
					"id": "CXs4b1z1Yw",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;deepMerge:"
					}
				},
				{
					"id": "C1GVo-wKq7",
					"type": "code",
					"data": {
						"code": "const obj1 = {\n  name: 'John',\n  age: 30,\n  address: {\n    street: '123 Main St',\n    city: 'Anytown',\n    state: 'CA'\n  }\n};\n\nconst obj2 = {\n  age: 35,\n  address: {\n    city: 'Othertown'\n  },\n  phone: '555-555-1212'\n};\n\nconst mergedObj = deepMerge(obj1, obj2);\n\nconsole.log(mergedObj);\n\/*\nAffiche:\n{\n  name: 'John',\n  age: 35,\n  address: {\n    street: '123 Main St',\n    city: 'Othertown',\n    state: 'CA'\n  },\n  phone: '555-555-1212'\n}\n*\/"
					}
				},
				{
					"id": "xBWj-P2mqb",
					"type": "header",
					"data": {
						"text": "domReady",
						"level": 4
					}
				},
				{
					"id": "EQvZRgqY4g",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;domReady&nbsp;permet d'ex\u00e9cuter une fonction lorsque le DOM est pr\u00eat. Elle prend en entr\u00e9e une fonction \u00e0 ex\u00e9cuter lorsque le DOM est pr\u00eat."
					}
				},
				{
					"id": "dx9JUjqxbb",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "kXfT-fj9Hr",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"fn",
								"function",
								"La fonction \u00e0 ex\u00e9cuter lorsque le DOM est pr\u00eat."
							]
						]
					}
				},
				{
					"id": "He0fGWwqjC",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;domReady:"
					}
				},
				{
					"id": "VT7lghNAk8",
					"type": "code",
					"data": {
						"code": "domReady(function() {\n  console.log('DOM is ready!');\n});"
					}
				},
				{
					"id": "j5sbOqPT_r",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "aFI4tF-bGt",
					"type": "header",
					"data": {
						"text": "foreach",
						"level": 4
					}
				},
				{
					"id": "oNW5xq-d1I",
					"type": "paragraph",
					"data": {
						"text": "La fonction foreach est une fonction utilitaire qui permet de parcourir un tableau ou un objet et d'ex\u00e9cuter une fonction de rappel pour chaque \u00e9l\u00e9ment. Cette fonction est souvent utilis\u00e9e pour effectuer des op\u00e9rations sur chaque \u00e9l\u00e9ment d'un tableau ou d'un objet."
					}
				},
				{
					"id": "UZINrJbQhn",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"iterated",
								"array&nbsp;ou&nbsp;object",
								"Le tableau ou l'objet \u00e0 parcourir."
							],
							[
								"callback",
								"function",
								"La fonction de rappel \u00e0 ex\u00e9cuter pour chaque \u00e9l\u00e9ment."
							]
						]
					}
				},
				{
					"id": "qB99Xm1jH9",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction foreach:"
					}
				},
				{
					"id": "k_VB9pPnYy",
					"type": "code",
					"data": {
						"code": "const array = [1, 2, 3, 4, 5];\nforeach(array, function(value, index) {\n  console.log(`La valeur de l'\u00e9l\u00e9ment ${index} est ${value}`);\n});"
					}
				},
				{
					"id": "18qJ9gNZB-",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "i4ZUjazTOx",
					"type": "header",
					"data": {
						"text": "getGET",
						"level": 4
					}
				},
				{
					"id": "xSRuGdYpo4",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getGET&nbsp;permet de r\u00e9cup\u00e9rer la valeur d'un param\u00e8tre GET dans l'URL de la page. Elle prend en entr\u00e9e le nom du param\u00e8tre \u00e0 r\u00e9cup\u00e9rer et retourne sa valeur."
					}
				},
				{
					"id": "aeJt5z2U4F",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "u7E-3O7Oih",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"name",
								"string",
								"Le nom du param\u00e8tre GET \u00e0 r\u00e9cup\u00e9rer."
							]
						]
					}
				},
				{
					"id": "GjoO1Zs1n5",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getGET:"
					}
				},
				{
					"id": "LVPu-2jjth",
					"type": "paragraph",
					"data": {
						"text": "Supposons que l'URL de la page soit&nbsp;http:\/\/example.com\/index.html?param1=value1&amp;param2=value2. Pour r\u00e9cup\u00e9rer la valeur du param\u00e8tre&nbsp;param1, on peut utiliser la fonction&nbsp;getGET&nbsp;de la mani\u00e8re suivante:"
					}
				},
				{
					"id": "eNpP2P3k9j",
					"type": "code",
					"data": {
						"code": "const param1Value = getGET('param1');\nconsole.log(param1Value); \/\/ Affiche \"value1\""
					}
				},
				{
					"id": "3Sq-6am51z",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "yZ19FWRT0S",
					"type": "header",
					"data": {
						"text": "getNextDayOfWeek",
						"level": 4
					}
				},
				{
					"id": "ceadIr9M4x",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getNextDayOfWeek&nbsp;prend en entr\u00e9e une date et un jour de la semaine (0 pour dimanche, 1 pour lundi, etc.) et retourne la prochaine occurrence de ce jour de la semaine apr\u00e8s la date renseign\u00e9e."
					}
				},
				{
					"id": "JG4uWhG4eK",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "hRFuWDwQsP",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"date",
								"Date",
								"La date \u00e0 partir de laquelle chercher la prochaine occurrence du jour de la semaine."
							],
							[
								"dayOfWeek",
								"number",
								"Le jour de la semaine \u00e0 chercher, repr\u00e9sent\u00e9 par un nombre entre 0 (dimanche) et 6 (samedi)."
							]
						]
					}
				},
				{
					"id": "4jXQEdEEic",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getNextDayOfWeek:"
					}
				},
				{
					"id": "ScY4iBuPCs",
					"type": "code",
					"data": {
						"code": "const date = new Date('2022-01-01');\nconst nextMonday = getNextDayOfWeek(date, 1); \/\/ Cherche le prochain lundi apr\u00e8s le 1er janvier 2022\n\nconsole.log(nextMonday); \/\/ Affiche la date du lundi suivant, le 3 janvier 2022"
					}
				},
				{
					"id": "SKX6LOHdVq",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "YK7qJlnl-S",
					"type": "header",
					"data": {
						"text": "getParent",
						"level": 4
					}
				},
				{
					"id": "otJpMtSwUV",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getParent&nbsp;prend en entr\u00e9e un \u00e9l\u00e9ment HTML et un s\u00e9lecteur CSS et retourne le parent le plus proche de l'\u00e9l\u00e9ment qui correspond au s\u00e9lecteur donn\u00e9."
					}
				},
				{
					"id": "EzPs4Knjf3",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "CbenzKDZhV",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"element",
								"HTMLElement",
								"L'\u00e9l\u00e9ment dont on doit chercher le plus proche parent avec le s\u00e9lecteur donn\u00e9."
							],
							[
								"selectorString",
								"string",
								"Le s\u00e9lecteur CSS utilis\u00e9 pour chercher le parent."
							]
						]
					}
				},
				{
					"id": "_MTVaj7lWI",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getParent:"
					}
				},
				{
					"id": "YzfaIoOJwG",
					"type": "code",
					"data": {
						"code": "<div class=\"parent\">\n  <div class=\"child\">\n    <div class=\"grandchild\"><\/div>\n  <\/div>\n<\/div>"
					}
				},
				{
					"id": "vn5DbzY46a",
					"type": "code",
					"data": {
						"code": "const grandchild = document.querySelector('.grandchild');\nconst parent = getParent(grandchild, '.parent');\n\nconsole.log(parent); \/\/ Affiche l'\u00e9l\u00e9ment avec la classe \"parent\""
					}
				},
				{
					"id": "o2DIIL950X",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "u_Q5izyIxq",
					"type": "header",
					"data": {
						"text": "getRandomArbitrary",
						"level": 4
					}
				},
				{
					"id": "InKJ2Wji9Q",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getRandomArbitrary&nbsp;permet de g\u00e9n\u00e9rer un nombre al\u00e9atoire compris entre deux valeurs sp\u00e9cifi\u00e9es. Elle prend en entr\u00e9e deux nombres."
					}
				},
				{
					"id": "VkF0oUB2IU",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "PUd0RVepp7",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"min",
								"number",
								"La valeur minimale pour le nombre al\u00e9atoire."
							],
							[
								"max",
								"number",
								"La valeur maximale pour le nombre al\u00e9atoire."
							]
						]
					}
				},
				{
					"id": "B6r9DqEleQ",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getRandomArbitrary:"
					}
				},
				{
					"id": "JfPXPtRY14",
					"type": "code",
					"data": {
						"code": "console.log(getRandomArbitrary(1, 10)); \/\/ Un nombre al\u00e9atoire compris entre 1 et 10"
					}
				},
				{
					"id": "0fL9Z9vZBD",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "LDMCjvrtZ2",
					"type": "header",
					"data": {
						"text": "getTmpl",
						"level": 4
					}
				},
				{
					"id": "jTaz4IxnSq",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getTmpl&nbsp;permet de r\u00e9cup\u00e9rer le contenu HTML d'un \u00e9l\u00e9ment HTML sp\u00e9cifi\u00e9 par un s\u00e9lecteur. Elle prend en entr\u00e9e un s\u00e9lecteur CSS."
					}
				},
				{
					"id": "wMjajGGtrR",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "MI96guzuXj",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"selector",
								"string",
								"Le s\u00e9lecteur CSS de l'\u00e9l\u00e9ment HTML \u00e0 r\u00e9cup\u00e9rer."
							]
						]
					}
				},
				{
					"id": "Pg_gqER3tp",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getTmpl:"
					}
				},
				{
					"id": "yHiyERmrRn",
					"type": "code",
					"data": {
						"code": "const mySelector = '#myElement';\n\nconsole.log(getTmpl(mySelector)); \/\/ Contenu HTML de l'\u00e9l\u00e9ment avec l'id 'myElement'"
					}
				},
				{
					"id": "Efz6FIjr55",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "W9_MaQeiZ3",
					"type": "header",
					"data": {
						"text": "getUrlParam",
						"level": 4
					}
				},
				{
					"id": "fQBe5rPGZr",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getUrlParam&nbsp;permet de r\u00e9cup\u00e9rer la valeur d'un param\u00e8tre d'une URL. Elle prend en entr\u00e9e deux param\u00e8tres: le nom du param\u00e8tre \u00e0 r\u00e9cup\u00e9rer et la valeur par d\u00e9faut \u00e0 retourner si le param\u00e8tre n'est pas pr\u00e9sent dans l'URL."
					}
				},
				{
					"id": "1qrb-hoidk",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "nAUWkdDCwI",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"parameter",
								"string",
								"Le nom du param\u00e8tre \u00e0 r\u00e9cup\u00e9rer."
							],
							[
								"defaultvalue",
								"any",
								"La valeur par d\u00e9faut \u00e0 retourner si le param\u00e8tre n'est pas pr\u00e9sent dans l'URL."
							]
						]
					}
				},
				{
					"id": "JHuZ5lHMOA",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getUrlParam:"
					}
				},
				{
					"id": "m4WZ15zO57",
					"type": "code",
					"data": {
						"code": "\/\/ URL: https:\/\/example.com\/?foo=bar&baz=qux\nconst foo = getUrlParam('foo', 'default value'); \/\/ 'bar'\nconst bar = getUrlParam('bar', 'default value'); \/\/ 'default value'"
					}
				},
				{
					"id": "s8vD_WsXvP",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "7dCHZZNspS",
					"type": "header",
					"data": {
						"text": "getUrlVars",
						"level": 4
					}
				},
				{
					"id": "1EUSpWPXfj",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getUrlVars&nbsp;permet de r\u00e9cup\u00e9rer les param\u00e8tres d'une URL sous forme d'un tableau associatif. Elle prend en entr\u00e9e l'URL \u00e0 analyser et retourne un tableau associatif contenant les param\u00e8tres de l'URL."
					}
				},
				{
					"id": "AFObAoPbd8",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "vy62IGRd2I",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"url",
								"string",
								"L'URL \u00e0 analyser."
							]
						]
					}
				},
				{
					"id": "iZDVaApNZA",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getUrlVars:"
					}
				},
				{
					"id": "GVAZa3AzAt",
					"type": "code",
					"data": {
						"code": "\/\/ URL: https:\/\/example.com\/?foo=bar&baz=qux\nconst urlParams = getUrlVars(window.location.href);\n\nconsole.log(urlParams['foo']); \/\/ 'bar'\nconsole.log(urlParams['baz']); \/\/ 'qux'"
					}
				},
				{
					"id": "VwCqttnfXE",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "XNwI5c2z7V",
					"type": "header",
					"data": {
						"text": "getVar",
						"level": 4
					}
				},
				{
					"id": "CvbqUDNZus",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getVar&nbsp;permet de r\u00e9cup\u00e9rer la valeur d'une variable si elle est d\u00e9finie, sinon elle renvoie une valeur par d\u00e9faut. Elle prend en entr\u00e9e deux param\u00e8tres: la variable \u00e0 r\u00e9cup\u00e9rer et une valeur par d\u00e9faut."
					}
				},
				{
					"id": "EMPro4fU6_",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "YpF0LAxFCB",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"variable",
								"any",
								"La variable \u00e0 r\u00e9cup\u00e9rer."
							],
							[
								"defaultValue",
								"any",
								"La valeur par d\u00e9faut \u00e0 renvoyer si la variable n'est pas d\u00e9finie."
							]
						]
					}
				},
				{
					"id": "aPuiu081Zz",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getVar:"
					}
				},
				{
					"id": "sTV99mbCZh",
					"type": "code",
					"data": {
						"code": "const myVar = 'Hello, world!';\n\nconsole.log(getVar(myVar, 'Default value')); \/\/ 'Hello, world!'\nconsole.log(getVar(myOtherVar, 'Default value')); \/\/ 'Default value'"
					}
				},
				{
					"id": "lUvRGzi0Kx",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "T7qCflsHyj",
					"type": "header",
					"data": {
						"text": "getVariable",
						"level": 4
					}
				},
				{
					"id": "DYiML5qBdw",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;getVariable&nbsp;permet de r\u00e9cup\u00e9rer la valeur d'une variable si elle n'est pas vide, sinon elle retourne une valeur par d\u00e9faut. Elle prend en entr\u00e9e deux param\u00e8tres: la variable \u00e0 v\u00e9rifier et la valeur par d\u00e9faut \u00e0 retourner si la variable est vide."
					}
				},
				{
					"id": "7ClPpiLkhf",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "qqzVxUkNww",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"variable",
								"any",
								"La variable \u00e0 v\u00e9rifier."
							],
							[
								"defaultValue",
								"any",
								"La valeur par d\u00e9faut \u00e0 retourner si la variable est vide."
							]
						]
					}
				},
				{
					"id": "gHezyzmcBQ",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;getVariable:"
					}
				},
				{
					"id": "gsmBzyVnTJ",
					"type": "code",
					"data": {
						"code": "const variable1 = '';\nconst variable2 = 'Hello, world!';\nconst variable3 = null;\nconst variable4 = undefined;\n\nconsole.log(getVariable(variable1, 'default value')); \/\/ 'default value'\nconsole.log(getVariable(variable2, 'default value')); \/\/ 'Hello, world!'\nconsole.log(getVariable(variable3, 'default value')); \/\/ 'default value'\nconsole.log(getVariable(variable4, 'default value')); \/\/ 'default value'"
					}
				},
				{
					"id": "YLNV1BG7kw",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "34oTN7skVL",
					"type": "header",
					"data": {
						"text": "initToolTip",
						"level": 4
					}
				},
				{
					"id": "pybS1s1miR",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;initToolTip&nbsp;initialise les tooltips Bootstrap sur les \u00e9l\u00e9ments HTML qui ont l'attribut&nbsp;data-toggle=\"tooltip\". Elle ne prend aucun param\u00e8tre en entr\u00e9e."
					}
				},
				{
					"id": "XRe3beuvm4",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;initToolTip:"
					}
				},
				{
					"id": "tu6JEHD11o",
					"type": "code",
					"data": {
						"code": "<button type=\"button\" class=\"btn btn-secondary\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Tooltip on top\">\n  Tooltip on top\n<\/button>\n\n<script>\n  initToolTip();\n<\/script>"
					}
				},
				{
					"id": "iH-xbRzoeq",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "6JtMcmBeA8",
					"type": "header",
					"data": {
						"text": "isElement",
						"level": 4
					}
				},
				{
					"id": "siZq6nFycQ",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;isElement&nbsp;permet de v\u00e9rifier si un objet est un \u00e9l\u00e9ment DOM. Elle prend en entr\u00e9e un objet et retourne&nbsp;true&nbsp;si l'objet est un \u00e9l\u00e9ment DOM, et&nbsp;false&nbsp;sinon."
					}
				},
				{
					"id": "pmtAJnwrWf",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "ndQQlOx7zU",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"o",
								"any",
								"L'objet \u00e0 v\u00e9rifier."
							]
						]
					}
				},
				{
					"id": "uiMZ9gm-xG",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;isElement:"
					}
				},
				{
					"id": "Fj5Pn8BFDA",
					"type": "code",
					"data": {
						"code": "const div = document.createElement('div');\nconst span = document.createElement('span');\nconst text = document.createTextNode('Hello, world!');\n\ndiv.appendChild(span);\nspan.appendChild(text);\n\nconsole.log(isElement(div)); \/\/ true\nconsole.log(isElement(span)); \/\/ true\nconsole.log(isElement(text)); \/\/ false\nconsole.log(isElement({})); \/\/ false\nconsole.log(isElement(null)); \/\/ false\nconsole.log(isElement(undefined)); \/\/ false"
					}
				},
				{
					"id": "8lnWeUQ1e2",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "VIieGR7wUr",
					"type": "header",
					"data": {
						"text": "isEmpty",
						"level": 4
					}
				},
				{
					"id": "iNTxbo8UlA",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;isEmpty&nbsp;permet de v\u00e9rifier si une variable est vide ou non d\u00e9finie. Elle prend en entr\u00e9e une variable et retourne&nbsp;true&nbsp;si la variable est vide ou non d\u00e9finie, et&nbsp;false&nbsp;sinon."
					}
				},
				{
					"id": "YfFPjyohZw",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "Zy3LTdIz1j",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"variable",
								"any",
								"La variable \u00e0 v\u00e9rifier."
							]
						]
					}
				},
				{
					"id": "KnywjXWC4y",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;isEmpty:"
					}
				},
				{
					"id": "nmJT2aM89i",
					"type": "code",
					"data": {
						"code": "const variable1 = undefined;\nconst variable2 = null;\nconst variable3 = '';\nconst variable4 = 'Hello, world!';\nconst variable5 = { foo: 'bar' };\nconst variable6 = 0;\nconst variable7 = false;\n\nconsole.log(isEmpty(variable1)); \/\/ true\nconsole.log(isEmpty(variable2)); \/\/ true\nconsole.log(isEmpty(variable3)); \/\/ true\nconsole.log(isEmpty(variable4)); \/\/ false\nconsole.log(isEmpty(variable5)); \/\/ false\nconsole.log(isEmpty(variable6)); \/\/ true\nconsole.log(isEmpty(variable7)); \/\/ true"
					}
				},
				{
					"id": "DhLdykGq6T",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "5bf7pHfXeV",
					"type": "header",
					"data": {
						"text": "isFileImage",
						"level": 4
					}
				},
				{
					"id": "JlRFuHYs7V",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;isFileImage&nbsp;permet de v\u00e9rifier si un fichier est une image ou non. Elle prend en entr\u00e9e un objet&nbsp;file&nbsp;repr\u00e9sentant le fichier \u00e0 v\u00e9rifier."
					}
				},
				{
					"id": "939YJp0UzD",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "SagRMwd8Dg",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"file",
								"object",
								"L'objet repr\u00e9sentant le fichier \u00e0 v\u00e9rifier."
							]
						]
					}
				},
				{
					"id": "Fw1eSJ7sLr",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;isFileImage:"
					}
				},
				{
					"id": "tb9N2GeNjB",
					"type": "code",
					"data": {
						"code": "const file = {\n  name: 'image.jpg',\n  type: 'image\/jpeg',\n  size: 1024\n};\n\nconsole.log(isFileImage(file)); \/\/ true"
					}
				},
				{
					"id": "CvjUXWO0XR",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "6Q38Vx5EFa",
					"type": "header",
					"data": {
						"text": "isIE",
						"level": 4
					}
				},
				{
					"id": "EfkYBKjsIR",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;isIE&nbsp;permet de d\u00e9tecter si le navigateur de l'utilisateur est Internet Explorer ou non. Elle prend en entr\u00e9e un param\u00e8tre optionnel&nbsp;userAgent&nbsp;qui permet de sp\u00e9cifier une cha\u00eene de caract\u00e8res repr\u00e9sentant l'agent utilisateur du navigateur. Si ce param\u00e8tre n'est pas sp\u00e9cifi\u00e9, la fonction utilise la propri\u00e9t\u00e9&nbsp;navigator.userAgent&nbsp;du navigateur."
					}
				},
				{
					"id": "GoBUYoVQEC",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "N5PWvHNUDP",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"userAgent",
								"string",
								"La cha\u00eene de caract\u00e8res repr\u00e9sentant l'agent utilisateur du navigateur."
							]
						]
					}
				},
				{
					"id": "A7YcOG0VHI",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;isIE:"
					}
				},
				{
					"id": "MCAd8I8zjx",
					"type": "code",
					"data": {
						"code": "console.log(isIE()); \/\/ true si le navigateur est Internet Explorer, false sinon\nconsole.log(isIE('Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/58.0.3029.110 Safari\/537.36 Edge\/16.16299')); \/\/ false"
					}
				},
				{
					"id": "aUNhM3BByi",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "-otD3rUK4W",
					"type": "header",
					"data": {
						"text": "IsJsonString",
						"level": 4
					}
				},
				{
					"id": "lxj-M3NuT6",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;IsJsonString&nbsp;permet de v\u00e9rifier si une cha\u00eene de caract\u00e8res est au format JSON valide. Elle prend en entr\u00e9e une cha\u00eene de caract\u00e8res \u00e0 v\u00e9rifier."
					}
				},
				{
					"id": "PO9JOan3zC",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "1kD8hQAlu6",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"str",
								"string",
								"La cha\u00eene de caract\u00e8res \u00e0 v\u00e9rifier."
							]
						]
					}
				},
				{
					"id": "p6TJoWQDC4",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;IsJsonString:"
					}
				},
				{
					"id": "Wn3KztScrO",
					"type": "code",
					"data": {
						"code": "console.log(IsJsonString('{\"name\":\"John\",\"age\":30,\"city\":\"New York\"}')); \/\/ true\nconsole.log(IsJsonString('{\"name\":\"John\",\"age\":30,\"city\":\"New York\"')); \/\/ false"
					}
				},
				{
					"id": "sSSfmFGsVv",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "ZVxWReqKpS",
					"type": "header",
					"data": {
						"text": "isNode",
						"level": 4
					}
				},
				{
					"id": "WytbwN-W8n",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;isNode&nbsp;permet de v\u00e9rifier si un objet est un n\u0153ud DOM. Elle prend en entr\u00e9e un objet et retourne&nbsp;true&nbsp;si l'objet est un n\u0153ud DOM, et&nbsp;false&nbsp;sinon."
					}
				},
				{
					"id": "tMHYpwAeQ4",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "W0JC3AaoX9",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"o",
								"any",
								"L'objet \u00e0 v\u00e9rifier."
							]
						]
					}
				},
				{
					"id": "3ASxP1FXQH",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;isNode:"
					}
				},
				{
					"id": "F7e4wJh58A",
					"type": "code",
					"data": {
						"code": "const div = document.createElement('div');\nconst span = document.createElement('span');\nconst text = document.createTextNode('Hello, world!');\n\ndiv.appendChild(span);\nspan.appendChild(text);\n\nconsole.log(isNode(div)); \/\/ true\nconsole.log(isNode(span)); \/\/ true\nconsole.log(isNode(text)); \/\/ true\nconsole.log(isNode({})); \/\/ false\nconsole.log(isNode(null)); \/\/ false\nconsole.log(isNode(undefined)); \/\/ false"
					}
				},
				{
					"id": "OQMFvCGZdo",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "lXn-j7qej_",
					"type": "header",
					"data": {
						"text": "loadClass",
						"level": 4
					}
				},
				{
					"id": "lt5xRGbNGe",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;loadClass&nbsp;permet de charger une classe JavaScript depuis un fichier JS ou de lancer une fonction de rappel si la classe est d\u00e9j\u00e0 charg\u00e9e. Elle prend en entr\u00e9e les param\u00e8tres suivants:"
					}
				},
				{
					"id": "16kXzeN6nx",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"className",
								"string",
								"Le nom de la classe \u00e0 charger."
							],
							[
								"url",
								"string",
								"L'URL du fichier JS contenant la classe."
							],
							[
								"callback",
								"function",
								"La fonction de rappel \u00e0 appeler une fois que la classe est charg\u00e9e."
							]
						]
					}
				},
				{
					"id": "MSBHPqmWLf",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;loadClass&nbsp;v\u00e9rifie si la classe est d\u00e9j\u00e0 charg\u00e9e en v\u00e9rifiant si la variable globale&nbsp;window.Autocomplete&nbsp;est d\u00e9finie. Si c'est le cas, elle appelle imm\u00e9diatement la fonction de rappel. Sinon, elle charge le fichier JS en utilisant la fonction&nbsp;import&nbsp;et ajoute le nom de la classe \u00e0 une liste de classes en cours de chargement. Une fois que le fichier JS est charg\u00e9, la fonction&nbsp;loadClass&nbsp;d\u00e9finit la classe sur la variable globale&nbsp;window[className], supprime le nom de la classe de la liste de classes en cours de chargement et appelle la fonction de rappel."
					}
				},
				{
					"id": "zFlnI6p4o7",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;loadClass:"
					}
				},
				{
					"id": "bF84WtEGUc",
					"type": "code",
					"data": {
						"code": "loadClass('Autocomplete', 'autocomplete.js', function() {\n  const myAutocomplete = new Autocomplete();\n  myAutocomplete.init();\n});"
					}
				},
				{
					"id": "zeNWvkgpYX",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "3EYrawffJa",
					"type": "header",
					"data": {
						"text": "loadClasses",
						"level": 4
					}
				},
				{
					"id": "kTphhk9Ido",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;loadClasses&nbsp;permet de charger plusieurs classes JavaScript depuis des fichiers JS ou de lancer une fonction de rappel si toutes les classes sont d\u00e9j\u00e0 charg\u00e9es. Elle prend en entr\u00e9e les param\u00e8tres suivants:"
					}
				},
				{
					"id": "K4_jC85w9V",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"classes",
								"object",
								"Un objet contenant les noms des classes \u00e0 charger en tant que cl\u00e9s et les URL des fichiers JS contenant les classes en tant que valeurs."
							],
							[
								"callback",
								"function",
								"La fonction de rappel \u00e0 appeler une fois que toutes les classes sont charg\u00e9es."
							]
						]
					}
				},
				{
					"id": "gVYWnU6b4o",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;loadClasses&nbsp;v\u00e9rifie si chaque classe est d\u00e9j\u00e0 charg\u00e9e en v\u00e9rifiant si la variable globale correspondante est d\u00e9finie. Si c'est le cas, elle passe \u00e0 la classe suivante. Sinon, elle ajoute le nom de la classe \u00e0 une liste de classes en cours de chargement et charge le fichier JS en utilisant la fonction&nbsp;loadClass. Une fois que toutes les classes sont charg\u00e9es, la fonction&nbsp;loadClasses&nbsp;appelle la fonction de rappel."
					}
				},
				{
					"id": "imlT7kgFgX",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;loadClasses:"
					}
				},
				{
					"id": "FUXYeY-AbX",
					"type": "code",
					"data": {
						"code": "const classes = {\n  Autocomplete: 'autocomplete.js',\n  Modal: 'modal.js',\n  Tabs: 'tabs.js'\n};\n\nloadClasses(classes, function() {\n  const myAutocomplete = new Autocomplete();\n  myAutocomplete.init();\n\n  const myModal = new Modal();\n  myModal.init();\n\n  const myTabs = new Tabs();\n  myTabs.init();\n});"
					}
				},
				{
					"id": "USCFWST235",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "pb06eMqHYL",
					"type": "header",
					"data": {
						"text": "objectMap",
						"level": 4
					}
				},
				{
					"id": "B6zmSZ_yIL",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;objectMap&nbsp;prend en entr\u00e9e un objet et une fonction de mappage et retourne un nouvel objet avec les m\u00eames cl\u00e9s que l'objet d'entr\u00e9e, mais avec les valeurs transform\u00e9es par la fonction de mappage."
					}
				},
				{
					"id": "3fDNojrl8p",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "-0Aismmb7o",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"object",
								"object",
								"L'objet \u00e0 mapper."
							],
							[
								"mapFn",
								"Function",
								"La fonction de mappage \u00e0 appliquer \u00e0 chaque valeur de l'objet. Cette fonction prend en entr\u00e9e la valeur et la cl\u00e9 de l'objet et retourne la valeur transform\u00e9e."
							]
						]
					}
				},
				{
					"id": "cCwyjc9lEz",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;objectMap&nbsp;retourne un nouvel objet avec les m\u00eames cl\u00e9s que l'objet d'entr\u00e9e, mais avec les valeurs transform\u00e9es par la fonction de mappage."
					}
				},
				{
					"id": "fTSFfmCO0k",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;objectMap:"
					}
				},
				{
					"id": "5ixgDVbYeJ",
					"type": "code",
					"data": {
						"code": "const myObject = {\n  a: 1,\n  b: 2,\n  c: 3\n};\n\nconst mappedObject = objectMap(myObject, function(value, key) {\n  return value * 2;\n});\n\nconsole.log(mappedObject); \/\/ Affiche { a: 2, b: 4, c: 6 }"
					}
				},
				{
					"id": "2tX2U86gnV",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "bNzx_yl2uC",
					"type": "header",
					"data": {
						"text": "objectToFormData ",
						"level": 4
					}
				},
				{
					"id": "o9HGmLg0xS",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;objectToFormData&nbsp;est une fonction utilitaire qui permet de convertir un objet en un objet&nbsp;FormData. Cette fonction est souvent utilis\u00e9e pour envoyer des donn\u00e9es de formulaire via une requ\u00eate HTTP."
					}
				},
				{
					"id": "IAFQqZ0lto",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "NGpjNRNXOv",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"object",
								"object",
								"L'objet \u00e0 convertir en&nbsp;FormData."
							]
						]
					}
				},
				{
					"id": "AdlSCO75ul",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;objectToFormData:"
					}
				},
				{
					"id": "G88mCEcueY",
					"type": "code",
					"data": {
						"code": "const object = {\n  name: 'John Doe',\n  email: 'john.doe@example.com',\n  avatar: new File(['avatar'], 'avatar.png', { type: 'image\/png' })\n};\nconst formData = objectToFormData(object);"
					}
				},
				{
					"id": "aMGz4yUTIJ",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "kBFnxKMtxk",
					"type": "header",
					"data": {
						"text": "pad",
						"level": 4
					}
				},
				{
					"id": "qhEKwVQ6J6",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;pad&nbsp;permet de compl\u00e9ter un nombre avec des z\u00e9ros \u00e0 gauche pour atteindre une longueur donn\u00e9e. Elle prend en entr\u00e9e deux param\u00e8tres: le nombre \u00e0 compl\u00e9ter et la longueur souhait\u00e9e. Si la longueur n'est pas sp\u00e9cifi\u00e9e, elle est par d\u00e9faut de 2."
					}
				},
				{
					"id": "ohj89-CDPj",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "NubFKXMP0b",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"number",
								"number",
								"Le nombre \u00e0 compl\u00e9ter."
							],
							[
								"length",
								"number",
								"La longueur souhait\u00e9e."
							]
						]
					}
				},
				{
					"id": "Vppj5_Gbxh",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;pad:"
					}
				},
				{
					"id": "dHrdNfDcHw",
					"type": "code",
					"data": {
						"code": "console.log(pad(5)); \/\/ '05'\nconsole.log(pad(42, 4)); \/\/ '0042'\nconsole.log(pad(123456789, 5)); \/\/ '123456789'"
					}
				},
				{
					"id": "C-D0pcWD82",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "vwMjIl151u",
					"type": "header",
					"data": {
						"text": "processTemplate",
						"level": 4
					}
				},
				{
					"id": "1C9djHZMlj",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;processTemplate&nbsp;permet de remplacer des placeholders dans une cha\u00eene de caract\u00e8res par des valeurs sp\u00e9cifi\u00e9es dans un objet de donn\u00e9es. Elle prend en entr\u00e9e un objet de param\u00e8tres contenant un template, un s\u00e9lecteur CSS optionnel pour r\u00e9cup\u00e9rer le template depuis le DOM, et un objet de donn\u00e9es contenant les valeurs \u00e0 remplacer."
					}
				},
				{
					"id": "GN7w4VwYe7",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "FmUOxCdIdn",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"parameters",
								"object",
								"L'objet de param\u00e8tres contenant les propri\u00e9t\u00e9s suivantes :&nbsp;template&nbsp;(optionnel) : la cha\u00eene de caract\u00e8res contenant les placeholders \u00e0 remplacer,&nbsp;selector&nbsp;(optionnel) : le s\u00e9lecteur CSS de l'\u00e9l\u00e9ment HTML contenant le template,&nbsp;data&nbsp;(optionnel) : l'objet de donn\u00e9es contenant les valeurs \u00e0 remplacer."
							]
						]
					}
				},
				{
					"id": "k_u3aH_32h",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;processTemplate:"
					}
				},
				{
					"id": "yAK7-vMgab",
					"type": "code",
					"data": {
						"code": "const myTemplate = 'Bonjour ${prenom} ${nom} !';\nconst myData = { prenom: 'Jean', nom: 'Dupont' };\n\nconsole.log(processTemplate({ template: myTemplate, data: myData })); \/\/ 'Bonjour Jean Dupont !'"
					}
				},
				{
					"id": "_EBsrDwOC_",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "M31nRaVmWK",
					"type": "header",
					"data": {
						"text": "solveDateInputs",
						"level": 4
					}
				},
				{
					"id": "0qElNgCTcl",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;solveDateInputs&nbsp;permet de r\u00e9soudre un probl\u00e8me de compatibilit\u00e9 avec Internet Explorer concernant les champs de saisie de date. En effet, Internet Explorer ne supporte pas le format de date&nbsp;dd\/mm\/yyyy&nbsp;et utilise plut\u00f4t le format&nbsp;yyyy-mm-dd. Cette fonction permet donc de convertir les dates saisies dans le format&nbsp;dd\/mm\/yyyy&nbsp;en format&nbsp;yyyy-mm-dd&nbsp;pour les navigateurs Internet Explorer."
					}
				},
				{
					"id": "eqiHkGrLfh",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "AXeX2iP7ud",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"Aucun",
								"",
								"Cette fonction ne prend pas de param\u00e8tres."
							]
						]
					}
				},
				{
					"id": "Exnawy360g",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;solveDateInputs:"
					}
				},
				{
					"id": "cku61yOMog",
					"type": "code",
					"data": {
						"code": "solveDateInputs();"
					}
				},
				{
					"id": "FA-CaCj89b",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "wWSDfMZh_o",
					"type": "header",
					"data": {
						"text": "str_capitalize",
						"level": 4
					}
				},
				{
					"id": "z5ztBxBibx",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;str_capitalize&nbsp;permet de mettre en majuscule la premi\u00e8re lettre de chaque mot dans une cha\u00eene de caract\u00e8res. Elle prend en entr\u00e9e une cha\u00eene de caract\u00e8res."
					}
				},
				{
					"id": "F-zyrD2ZBD",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "iN5WzU1d5E",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"string",
								"string",
								"La cha\u00eene de caract\u00e8res \u00e0 modifier."
							]
						]
					}
				},
				{
					"id": "V63oc1ETMp",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;str_capitalize:"
					}
				},
				{
					"id": "J-ZYU-z79Q",
					"type": "code",
					"data": {
						"code": "const myString = 'bonjour tout le monde';\n\nconsole.log(str_capitalize(myString)); \/\/ 'Bonjour Tout Le Monde'"
					}
				},
				{
					"id": "2V1ILAu76B",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "xkSeIrKypA",
					"type": "header",
					"data": {
						"text": "t_",
						"level": 4
					}
				},
				{
					"id": "ygKpDS8Lst",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;t_&nbsp;est une fonction de traduction qui prend en entr\u00e9e une cl\u00e9 de traduction et des donn\u00e9es optionnelles et retourne une cha\u00eene de caract\u00e8res traduite. Elle utilise l'objet&nbsp;window.TRANSLATIONS&nbsp;pour r\u00e9cup\u00e9rer la traduction correspondante \u00e0 la cl\u00e9 et la fonction&nbsp;Twig.twig&nbsp;pour interpr\u00e9ter les variables Twig dans la traduction."
					}
				},
				{
					"id": "p0OIAjXt3H",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "-ZXpRy0W1a",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"key",
								"string",
								"La cl\u00e9 de traduction \u00e0 utiliser pour r\u00e9cup\u00e9rer la traduction."
							],
							[
								"datas",
								"object",
								"Les donn\u00e9es optionnelles \u00e0 utiliser pour interpr\u00e9ter les variables Twig dans la traduction."
							]
						]
					}
				},
				{
					"id": "8_XrLPmai6",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;t_&nbsp;retourne une cha\u00eene de caract\u00e8res traduite."
					}
				},
				{
					"id": "fqXHAJfDbu",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;t_:"
					}
				},
				{
					"id": "E4mIPgXm1A",
					"type": "code",
					"data": {
						"code": "const translatedString = t_('hello_world', { name: 'John' });\nconsole.log(translatedString); \/\/ Affiche \"Bonjour John\""
					}
				},
				{
					"id": "h2aRQXYubW",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "EM0XhxDRQn",
					"type": "header",
					"data": {
						"text": "toDateFR",
						"level": 4
					}
				},
				{
					"id": "179N82LP6u",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;toDateFR&nbsp;permet de convertir une date universelle ou un timestamp en une date au format fran\u00e7ais&nbsp;d\/m\/Y. Elle prend en entr\u00e9e une date optionnelle."
					}
				},
				{
					"id": "ooubhgmeFo",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "FqvyxBcPSm",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"date",
								"Date&nbsp;ou&nbsp;number",
								"La date universelle ou le timestamp \u00e0 convertir. Si non d\u00e9fini, la date courante est utilis\u00e9e."
							]
						]
					}
				},
				{
					"id": "YeU3jxXMuT",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;toDateFR:"
					}
				},
				{
					"id": "-KH_jQM_r-",
					"type": "code",
					"data": {
						"code": "const myDate = new Date('2022-01-01T00:00:00Z');\n\nconsole.log(toDateFR(myDate)); \/\/ '01\/01\/2022'\nconsole.log(toDateFR()); \/\/ Date courante au format 'd\/m\/Y'"
					}
				},
				{
					"id": "-PX2RrCv94",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "Le0AtZQFYs",
					"type": "header",
					"data": {
						"text": "toHoursMinutes",
						"level": 4
					}
				},
				{
					"id": "Bq_1rVYGtu",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;toHoursMinutes&nbsp;permet de convertir une date en une cha\u00eene de caract\u00e8res repr\u00e9sentant l'heure et les minutes de cette date. Elle prend en entr\u00e9e deux param\u00e8tres optionnels: la date \u00e0 convertir et un s\u00e9parateur optionnel entre l'heure et les minutes."
					}
				},
				{
					"id": "hYPte5xhFw",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "tNxLexWY0w",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"date",
								"Date&nbsp;ou&nbsp;number",
								"La date \u00e0 convertir. Si non d\u00e9fini, la date courante est utilis\u00e9e."
							],
							[
								"h",
								"string",
								"Le s\u00e9parateur optionnel entre l'heure et les minutes. Par d\u00e9faut, le s\u00e9parateur est&nbsp;:."
							]
						]
					}
				},
				{
					"id": "I9vm5KgV8a",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;toHoursMinutes:"
					}
				},
				{
					"id": "_AE0gy4rty",
					"type": "code",
					"data": {
						"code": "const myDate = new Date('2022-01-01T12:30:00Z');\n\nconsole.log(toHoursMinutes(myDate)); \/\/ '12:30'\nconsole.log(toHoursMinutes()); \/\/ Heure courante au format 'HH:MM'"
					}
				},
				{
					"id": "C6kZ_VmGfL",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "elba4hxyx2",
					"type": "paragraph",
					"data": {
						"text": "Voici une explication de la fonction&nbsp;toUniversalDate:"
					}
				},
				{
					"id": "rOJS9loraq",
					"type": "header",
					"data": {
						"text": "toLocaleDateTime",
						"level": 4
					}
				},
				{
					"id": "OuPvJ8CVGR",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;toLocaleDateTime&nbsp;permet de convertir une date en une cha\u00eene de caract\u00e8res repr\u00e9sentant la date et l'heure au format&nbsp;YYYY-MM-DD HH:MM:SS.mmm. Elle prend en entr\u00e9e une date optionnelle."
					}
				},
				{
					"id": "flAzjBpFxl",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "RCvV51B228",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"date",
								"Date&nbsp;ou&nbsp;number",
								"La date \u00e0 convertir. Si non d\u00e9fini, la date courante est utilis\u00e9e."
							]
						]
					}
				},
				{
					"id": "opyFoalz88",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;toLocaleDateTime:"
					}
				},
				{
					"id": "J15qTSJLku",
					"type": "code",
					"data": {
						"code": "const myDate = new Date('2022-01-01T12:30:00Z');\n\nconsole.log(toLocaleDateTime(myDate)); \/\/ '2022-01-01 12:30:00.000'\nconsole.log(toLocaleDateTime()); \/\/ Date courante au format 'YYYY-MM-DD HH:MM:SS.mmm'"
					}
				},
				{
					"id": "rbbykIPc1M",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "QbrlkyWM_X",
					"type": "header",
					"data": {
						"text": "toUniversalDate",
						"level": 4
					}
				},
				{
					"id": "sk3pC2WjE1",
					"type": "paragraph",
					"data": {
						"text": "La fonction&nbsp;toUniversalDate&nbsp;permet de convertir une date en une cha\u00eene de caract\u00e8res repr\u00e9sentant la date au format universel&nbsp;YYYY-MM-DD. Elle prend en entr\u00e9e une date optionnelle."
					}
				},
				{
					"id": "tIkyoVMVn9",
					"type": "paragraph",
					"data": {
						"text": "Le tableau des param\u00e8tres de cette fonction est le suivant:"
					}
				},
				{
					"id": "TeyMkd7GSC",
					"type": "table",
					"data": {
						"withHeadings": true,
						"content": [
							[
								"Nom de la variable",
								"Type",
								"Description"
							],
							[
								"date",
								"Date",
								"La date \u00e0 convertir. Si non d\u00e9fini, la date courante est utilis\u00e9e."
							]
						]
					}
				},
				{
					"id": "vGpbTFXHIS",
					"type": "paragraph",
					"data": {
						"text": "Voici un exemple d'utilisation de la fonction&nbsp;toUniversalDate:"
					}
				},
				{
					"id": "zuk1kqC1Mt",
					"type": "code",
					"data": {
						"code": "const myDate = new Date('2022-01-01T00:00:00Z');\n\nconsole.log(toUniversalDate(myDate)); \/\/ '2022-01-01'\nconsole.log(toUniversalDate()); \/\/ Date courante au format 'YYYY-MM-DD'"
					}
				},
				{
					"id": "c2_JJJ9x8s",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "fonctions.js"
	},
	"commandes.disponibles": {
		"title": "Commandes disponibles",
		"content": {
			"time": 1686744181940,
			"blocks": [
				{
					"id": "3rLTOZJ7Yo",
					"type": "paragraph",
					"data": {
						"text": "Voici les commandes possibles out of the box<br>"
					}
				},
				{
					"id": "ylI0NpxTKw",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "J7SY6aTpqQ",
					"type": "header",
					"data": {
						"text": "core:generateSchema",
						"level": 4
					}
				},
				{
					"id": "r3jtOA5NSn",
					"type": "paragraph",
					"data": {
						"text": "Permet de g\u00e9n\u00e9rer la base de donn\u00e9es \u00e0 partir des fichiers sch\u00e9mas json du site<br>"
					}
				},
				{
					"id": "KBEn4BIl3J",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "on6k2xWXFg",
					"type": "header",
					"data": {
						"text": "core:generateSiteMap",
						"level": 4
					}
				},
				{
					"id": "445duiPFZQ",
					"type": "paragraph",
					"data": {
						"text": "Permet de g\u00e9n\u00e9rer le fichier sitemap.xml \u00e0 la racine du site \u00e0 partir des routes ayant l'attribut \"sitemap\" renseign\u00e9<br>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "commandes.disponibles"
	},
	"commandes": {
		"title": "Les commandes (Depuis 1.6.x)",
		"content": {
			"time": 1686666056604,
			"blocks": [
				{
					"id": "mvMdanrYyj",
					"type": "paragraph",
					"data": {
						"text": "Nous avons mis \u00e0 disposition un fichier permettant d'\u00e9x\u00e9cuter des scripts PHP que vous auriez cr\u00e9\u00e9 dans vos module, de la m\u00eame fa\u00e7on que l'on cr\u00e9er la base de donn\u00e9es avec des sch\u00e9mas BDD : bin\/ezframe<br>"
					}
				},
				{
					"id": "ovNQRlXY2J",
					"type": "paragraph",
					"data": {
						"text": "A utiliser de cette fa\u00e7on :"
					}
				},
				{
					"id": "hae3oas92H",
					"type": "code",
					"data": {
						"code": "php bin\/ezframe monModule:maCommande --option1=\"1\" --option2=\"2\""
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "commandes"
	},
	"commandes.cree": {
		"title": "Cr\u00e9ation d'une commande",
		"content": {
			"time": 1686666044091,
			"blocks": [
				{
					"id": "3oOzkw4yCh",
					"type": "paragraph",
					"data": {
						"text": "Des commandes personnalis\u00e9e peuvent \u00eatre cr\u00e9\u00e9 dans un module"
					}
				},
				{
					"id": "mLcMLMe--m",
					"type": "paragraph",
					"data": {
						"text": "Il faut alors cr\u00e9er un fichier dans le r\u00e9pertoire Command\/ de votre module, ce r\u00e9pertoire devra \u00eatre cr\u00e9\u00e9 s'il n'existe pas. Le nom de ce fichier doit suivre la convention de nommage PascalCase car il contiendra une classe du m\u00eame nom de votre fichier. Ce nom est important car c'est celui-ci que vous utiliserez dans votre commande avec le nom de votre module."
					}
				},
				{
					"id": "R7wh_ml1_h",
					"type": "paragraph",
					"data": {
						"text": "Par exemple :<br>"
					}
				},
				{
					"id": "2iSert5aus",
					"type": "code",
					"data": {
						"code": "app\/\n\u251c\u2500\u2500 Demo\/\n\u2502   \u251c\u2500\u2500 Command\/\n\u2502   \u2502   \u251c\u2500\u2500 DemoCommand.php"
					}
				},
				{
					"id": "hR0vfsXtr5",
					"type": "paragraph",
					"data": {
						"text": "La classe dans ce fichier devra imp\u00e9rativement \u00e9tendre la classe \\Core\\CommandHandler<br>Le script \u00e0 \u00e9x\u00e9cuter devra \u00eatre plac\u00e9 dans une fonction public \"execute\""
					}
				},
				{
					"id": "bhYsAszrZa",
					"type": "paragraph",
					"data": {
						"text": "Exemple : un hello world<br>"
					}
				},
				{
					"id": "WONdhh2F3s",
					"type": "code",
					"data": {
						"code": "<?php\n\nnamespace App\\Demo\\Command;\n\nclass DemoCommand extends \\Core\\CommandHandler\n{\n\n  public function execute()\n  {\n    echo \"Hello World\" . PHP_EOL;\n  }\n}"
					}
				},
				{
					"id": "LBjA_iUNSF",
					"type": "paragraph",
					"data": {
						"text": "Pour ensuite \u00e9x\u00e9cuter ce script en ligne de commande \u00e0 la racine du site<br>"
					}
				},
				{
					"id": "_LwtP-DKsi",
					"type": "code",
					"data": {
						"code": "php bin\/ezframe demo:demoCommand"
					}
				},
				{
					"id": "79Kjr1hE0_",
					"type": "paragraph",
					"data": {
						"text": "o\u00f9 \"demo\" est le nom de votre module, et \"demoCommand\" est le nom de votre classe, notez la conversion du PascalCase en camelCase (m\u00eame si elle n'est pas n\u00e9cessaire)<br>"
					}
				},
				{
					"id": "LihPSFgb4t",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				},
				{
					"id": "fCiwKm8R6f",
					"type": "header",
					"data": {
						"text": "Options",
						"level": 4
					}
				},
				{
					"id": "CIlmoqWnlg",
					"type": "paragraph",
					"data": {
						"text": "Dans le cas o\u00f9 vous voulez passer des options dans votre commande, vous devez le faire de cette fa\u00e7on :<br>"
					}
				},
				{
					"id": "tIixO99l7h",
					"type": "code",
					"data": {
						"code": "php bin\/ezframe demo:demoCommand --nom=\"Alexandrie\""
					}
				},
				{
					"id": "bCJcHdC6-0",
					"type": "paragraph",
					"data": {
						"text": "Et devra \u00eatre r\u00e9cup\u00e9r\u00e9 dans votre script de cette fa\u00e7on :"
					}
				},
				{
					"id": "qfSZjTRZYz",
					"type": "code",
					"data": {
						"code": "<?php\n\nnamespace App\\Demo\\Command;\n\nclass DemoCommand extends \\Core\\CommandHandler\n{\n\n  public function execute()\n  {\n    $nom = $this->getOption(\"nom\");\n    echo \"Hello \" . $nom . PHP_EOL;\n  }\n}\n"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "commandes.cree"
	},
	"routing.creation": {
		"title": "Cr\u00e9ation d'une route",
		"content": {
			"time": 1686670780391,
			"blocks": [
				{
					"id": "X0g5tdsUys",
					"type": "paragraph",
					"data": {
						"text": "Vous pouvez ajouter une route dans le fichier config\/routes.json ou bien dans votre fichier app\/VotreModule\/routes_xxx.json"
					}
				},
				{
					"id": "BV3F17OpLu",
					"type": "paragraph",
					"data": {
						"text": "Le fichier contient un objet json contenant toutes vos routes, qui seront \u00e9galement des objets, leur cl\u00e9s devront \u00eatre l'url relative \u00e0 la racine du site correspondant \u00e0 cette route. Si vous incluez plusieurs fois la m\u00eame cl\u00e9, la route pr\u00e9c\u00e9dente ayant la m\u00eame cl\u00e9 sera \u00e9cras\u00e9e"
					}
				},
				{
					"id": "dNqlYNHlqJ",
					"type": "code",
					"data": {
						"code": "{\n  \"\/\": {\n    \"alias\": \"home\",\n    \"sitemap\" : true,\n    \"vars\": {\n      \"p\": \"home:default:render\" ,\n      \"fallback\" : \"login\",\n      \"t\" : \"home\/home.html.twig\"\n    }\n  },\n  \"\/admin\/\": {\n    \"sitemap\" : true,\n    \"alias\": \"admin-user\",\n    \"vars\": {\n      \"m\": \"Admin\",\n      \"c\": \"user\",\n      \"f\": \"render\"\n    }\n  }\n}"
					}
				},
				{
					"id": "8ZfYXPk3GM",
					"type": "paragraph",
					"data": {
						"text": "Les param\u00e8tres d'une route sont<br>"
					}
				},
				{
					"id": "a78i-zcQF5",
					"type": "table",
					"data": {
						"withHeadings": false,
						"content": [
							[
								"Nom",
								"Type",
								"Description"
							],
							[
								"alias",
								"string<br>",
								"L'alias de la route, on pourra r\u00e9cup\u00e9rer l'URL de la routes dans les autres parties du framework gr\u00e2ce \u00e0 celle-ci<br>"
							],
							[
								"sitemap",
								"bool|array",
								"D\u00e9termine si l'URL doit \u00eatre inclus lors de la g\u00e9n\u00e9ration du sitemap, il est possible de fournir un tableau pour g\u00e9n\u00e9rer plusieurs url \u00e0 partir de celle-ci<br>"
							],
							[
								"vars",
								"array",
								"Variables de la routes, d\u00e9termine o\u00f9 elle doit pointer, ses autorisations, o\u00f9 tout simplement des variables que l'on voudrait passer au contr\u00f4leur, param\u00e8tre possibles indiqu\u00e9s blus bas<br>"
							]
						]
					}
				},
				{
					"id": "AYlqmXLadS",
					"type": "paragraph",
					"data": {
						"text": "Le param\u00e8tre vars peut contenir plusieurs param\u00e8tres \u00e9galement<br>"
					}
				},
				{
					"id": "or6710GAw3",
					"type": "table",
					"data": {
						"withHeadings": false,
						"content": [
							[
								"Nom",
								"Type",
								"Description"
							],
							[
								"m",
								"string",
								"Le module o\u00f9 la route va pointer<br>"
							],
							[
								"c",
								"string",
								"Le contr\u00f4leur o\u00f9 la route va pointer<br>"
							],
							[
								"f",
								"string",
								"La fonction o\u00f9 la route va pointer<br>"
							],
							[
								"p",
								"string",
								"Permet de concat\u00e9ner les pr\u00e9c\u00e9dents param\u00e8tres en une seule variable (m:c:f)<br>"
							],
							[
								"a",
								"array|0<br>",
								"Roles autoris\u00e9s, si tableau vide, seul l'authentification est n\u00e9cessaire pour y acc\u00e9der, si 0 la page est accessible \u00e0 tous<br>"
							],
							[
								"fallback",
								"string",
								"Si l'utilisateur n'a pas acc\u00e8s \u00e0 la route (voir param\u00e8tre a), il sera redirig\u00e9 \u00e0 la route dont vous renseignerez l'alias ici<br>"
							]
						]
					}
				},
				{
					"id": "03gaHCW5_R",
					"type": "raw",
					"data": {
						"html": "<hr>"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "routing.creation"
	},
	"routing.sitemap": {
		"title": "SiteMap",
		"content": {
			"time": 1686671404696,
			"blocks": [],
			"version": "2.26.5"
		},
		"fullPath": "routing.sitemap"
	},
	"bdd.querybuilder": {
		"title": "Classe SQLBuilder",
		"content": {
			"time": 1686918543650,
			"blocks": [
				{
					"id": "fl0YsH_D-J",
					"type": "paragraph",
					"data": {
						"text": "La classe SQLBuilder est utilis\u00e9e pour construire des requ\u00eates SQL dynamiques. Elle offre des m\u00e9thodes pour sp\u00e9cifier les colonnes \u00e0 s\u00e9lectionner, les tables \u00e0 joindre, les conditions de recherche, les valeurs \u00e0 ins\u00e9rer, les clauses GROUP BY et HAVING, les clauses ORDER BY, ainsi que les limites de pagination."
					}
				},
				{
					"id": "KaFt2JT4NG",
					"type": "paragraph",
					"data": {
						"text": "M\u00e9thodes :"
					}
				},
				{
					"id": "D74ZgLwwKh",
					"type": "list",
					"data": {
						"style": "ordered",
						"items": [
							"__construct($parameters = []) : void<br>Description : Le constructeur de la classe. Permet d'initialiser les param\u00e8tres de la classe \u00e0 partir d'un tableau associatif.<br>Param\u00e8tres :parameters (array) : Un tableau associatif contenant les param\u00e8tres \u00e0 d\u00e9finir. Les cl\u00e9s du tableau correspondent aux noms des param\u00e8tres de la classe, et les valeurs correspondent aux valeurs \u00e0 affecter \u00e0 ces param\u00e8tres.",
							"parameters (array) : Un tableau associatif contenant les param\u00e8tres \u00e0 d\u00e9finir. Les cl\u00e9s du tableau correspondent aux noms des param\u00e8tres de la classe, et les valeurs correspondent aux valeurs \u00e0 affecter \u00e0 ces param\u00e8tres.",
							"getColonnes() : array<br>Description : Retourne les colonnes s\u00e9lectionn\u00e9es.<br>Retour : Un tableau contenant les colonnes s\u00e9lectionn\u00e9es.",
							"getConditions() : array<br>Description : Retourne les conditions de recherche.<br>Retour : Un tableau contenant les conditions de recherche.",
							"getValues() : array<br>Description : Retourne les valeurs \u00e0 ins\u00e9rer.<br>Retour : Un tableau contenant les valeurs \u00e0 ins\u00e9rer.",
							"getTable() : string<br>Description : Retourne la table principale.<br>Retour : Une cha\u00eene de caract\u00e8res repr\u00e9sentant le nom de la table principale.",
							"getJoinTables() : array<br>Description : Retourne les tables \u00e0 joindre.<br>Retour : Un tableau contenant les tables \u00e0 joindre. Chaque cl\u00e9 du tableau correspond au nom de la table, et chaque valeur correspond \u00e0 la condition de liaison.",
							"getGroupBy() : array<br>Description : Retourne les colonnes utilis\u00e9es pour regrouper les r\u00e9sultats.<br>Retour : Un tableau contenant les colonnes utilis\u00e9es pour regrouper les r\u00e9sultats.",
							"getHaving() : array<br>Description : Retourne les conditions de regroupement.<br>Retour : Un tableau contenant les conditions de regroupement.",
							"getLimit()<br>Description : Retourne la limite de pagination.<br>Retour : La limite de pagination.",
							"getOffset()<br>Description : Retourne le d\u00e9calage de pagination.<br>Retour : Le d\u00e9calage de pagination.",
							"getOrderBy()<br>Description : Retourne les clauses de tri.<br>Retour : Un tableau contenant les clauses de tri.",
							"getUnions()<br>Description : Retourne les requ\u00eates de l'union.<br>Retour : Un tableau contenant les requ\u00eates de l'union.",
							"getUnion($alias)<br>Description : Retourne la requ\u00eate d'union correspondant \u00e0 l'alias sp\u00e9cifi\u00e9.<br>Param\u00e8tres :alias (string) : L'alias de la requ\u00eate d'union \u00e0 r\u00e9cup\u00e9rer.<br>Retour : La requ\u00eate d'union correspondant \u00e0 l'alias sp\u00e9cifi\u00e9, ou null si aucun alias correspondant n'est trouv\u00e9.",
							"alias (string) : L'alias de la requ\u00eate d'union \u00e0 r\u00e9cup\u00e9rer.",
							"getSql($force = false)<br>Description : Retourne la requ\u00eate SQL g\u00e9n\u00e9r\u00e9e.<br>Param\u00e8tres :force (bool) : Indique si la g\u00e9n\u00e9ration de la requ\u00eate SQL doit \u00eatre forc\u00e9e, m\u00eame si elle a d\u00e9j\u00e0 \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9e pr\u00e9c\u00e9demment.<br>Retour : La requ\u00eate SQL g\u00e9n\u00e9r\u00e9e.",
							"force (bool) : Indique si la g\u00e9n\u00e9ration de la requ\u00eate SQL doit \u00eatre forc\u00e9e, m\u00eame si elle a d\u00e9j\u00e0 \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9e pr\u00e9c\u00e9demment.",
							"setColonnes($colonnes) : self<br>Description : D\u00e9finit les colonnes \u00e0 s\u00e9lectionner.<br>Param\u00e8tres :colonnes (array) : Un tableau contenant les noms des colonnes \u00e0 s\u00e9lectionner.<br>Retour : L'instance de la classe SQLBuilder.",
							"colonnes (array) : Un tableau contenant les noms des colonnes \u00e0 s\u00e9lectionner.",
							"setConditions($conditions) : self<br>Description : D\u00e9finit les conditions de recherche.<br>Param\u00e8tres :conditions (array) : Un tableau contenant les conditions de recherche.<br>Retour : L'instance de la classe SQLBuilder.",
							"conditions (array) : Un tableau contenant les conditions de recherche.",
							"setValues($values) : self<br>Description : D\u00e9finit les valeurs \u00e0 ins\u00e9rer.<br>Param\u00e8tres :values (array) : Un tableau associatif contenant les valeurs \u00e0 ins\u00e9rer. Les cl\u00e9s du tableau correspondent aux alias des valeurs, et les valeurs correspondent aux valeurs \u00e0 ins\u00e9rer.<br>Retour : L'instance de la classe SQLBuilder.",
							"values (array) : Un tableau associatif contenant les valeurs \u00e0 ins\u00e9rer. Les cl\u00e9s du tableau correspondent aux alias des valeurs, et les valeurs correspondent aux valeurs \u00e0 ins\u00e9rer.",
							"setTable($table) : self<br>Description : D\u00e9finit la table principale.<br>Param\u00e8tres :table (string) : Le nom de la table principale.<br>Retour : L'instance de la classe SQLBuilder.",
							"table (string) : Le nom de la table principale.",
							"setJoinTables($joinTables) : self<br>Description : D\u00e9finit les tables \u00e0 joindre.<br>Param\u00e8tres :joinTables (array) : Un tableau associatif contenant les tables \u00e0 joindre. Les cl\u00e9s du tableau correspondent aux noms des tables \u00e0 joindre, et les valeurs correspondent aux conditions de liaison.<br>Retour : L'instance de la classe SQLBuilder.",
							"joinTables (array) : Un tableau associatif contenant les tables \u00e0 joindre. Les cl\u00e9s du tableau correspondent aux noms des tables \u00e0 joindre, et les valeurs correspondent aux conditions de liaison.",
							"generatePlaceholdersAndValues($values, $prefix = \"\") : string<br>Description : G\u00e9n\u00e8re des marqueurs de param\u00e8tre et ajoute les valeurs correspondantes.<br>Param\u00e8tres :values (array) : Un tableau associatif contenant les valeurs \u00e0 ajouter. Les cl\u00e9s du tableau correspondent aux alias des valeurs, et les valeurs correspondent aux valeurs \u00e0 ajouter.prefix (string) : Un pr\u00e9fixe \u00e0 utiliser pour les marqueurs de param\u00e8tre g\u00e9n\u00e9r\u00e9s.<br>Retour : Une cha\u00eene de caract\u00e8res contenant les marqueurs de param\u00e8tre g\u00e9n\u00e9r\u00e9s, s\u00e9par\u00e9s par des virgules.",
							"values (array) : Un tableau associatif contenant les valeurs \u00e0 ajouter. Les cl\u00e9s du tableau correspondent aux alias des valeurs, et les valeurs correspondent aux valeurs \u00e0 ajouter.",
							"prefix (string) : Un pr\u00e9fixe \u00e0 utiliser pour les marqueurs de param\u00e8tre g\u00e9n\u00e9r\u00e9s.",
							"setAutoJoinTables($autoJoinTables) : self<br>Description : Ajoute automatiquement des tables de jointure en utilisant des classes et des alias sp\u00e9cifi\u00e9s.<br>Param\u00e8tres :autoJoinTables (array) : Un tableau associatif contenant les informations des tables \u00e0 joindre automatiquement. Chaque \u00e9l\u00e9ment du tableau doit contenir les cl\u00e9s suivantes :alias : L'alias de la table de jointure.class : La classe correspondante \u00e0 la table principale.aliasJoined : L'alias de la table jointe.classJoined : La classe correspondante \u00e0 la table jointe.<br>Retour : L'instance de la classe SQLBuilder.",
							"autoJoinTables (array) : Un tableau associatif contenant les informations des tables \u00e0 joindre automatiquement. Chaque \u00e9l\u00e9ment du tableau doit contenir les cl\u00e9s suivantes :alias : L'alias de la table de jointure.class : La classe correspondante \u00e0 la table principale.aliasJoined : L'alias de la table jointe.classJoined : La classe correspondante \u00e0 la table jointe.",
							"alias : L'alias de la table de jointure.",
							"class : La classe correspondante \u00e0 la table principale.",
							"aliasJoined : L'alias de la table jointe.",
							"classJoined : La classe correspondante \u00e0 la table jointe.",
							"setGroupBy($groupBy) : self<br>Description : D\u00e9finit les colonnes pour le regroupement.<br>Param\u00e8tres :groupBy (array) : Un tableau contenant les noms des colonnes pour le regroupement.<br>Retour : L'instance de la classe SQLBuilder.",
							"groupBy (array) : Un tableau contenant les noms des colonnes pour le regroupement.",
							"setHaving($having) : self<br>Description : D\u00e9finit les conditions de filtrage apr\u00e8s regroupement.<br>Param\u00e8tres :having (array) : Un tableau contenant les conditions de filtrage apr\u00e8s regroupement.<br>Retour : L'instance de la classe SQLBuilder.",
							"having (array) : Un tableau contenant les conditions de filtrage apr\u00e8s regroupement.",
							"setLimit($limit) : self<br>Description : D\u00e9finit la limite de r\u00e9sultats \u00e0 r\u00e9cup\u00e9rer.<br>Param\u00e8tres :limit (int|null) : Le nombre maximal de r\u00e9sultats \u00e0 r\u00e9cup\u00e9rer. Si la valeur est null, aucune limite n'est appliqu\u00e9e.<br>Retour : L'instance de la classe SQLBuilder.",
							"limit (int|null) : Le nombre maximal de r\u00e9sultats \u00e0 r\u00e9cup\u00e9rer. Si la valeur est null, aucune limite n'est appliqu\u00e9e.",
							"setOffset($offset) : self<br>Description : D\u00e9finit le d\u00e9calage pour la r\u00e9cup\u00e9ration des r\u00e9sultats.<br>Param\u00e8tres :offset (int|null) : Le d\u00e9calage \u00e0 appliquer lors de la r\u00e9cup\u00e9ration des r\u00e9sultats. Si la valeur est null, aucun d\u00e9calage n'est appliqu\u00e9.<br>Retour : L'instance de la classe SQLBuilder.",
							"offset (int|null) : Le d\u00e9calage \u00e0 appliquer lors de la r\u00e9cup\u00e9ration des r\u00e9sultats. Si la valeur est null, aucun d\u00e9calage n'est appliqu\u00e9.",
							"setOrderBy($orderBy) : self<br>Description : D\u00e9finit l'ordre de tri des r\u00e9sultats.<br>Param\u00e8tres :orderBy (array) : Un tableau contenant les colonnes pour l'ordre de tri des r\u00e9sultats.<br>Retour : L'instance de la classe SQLBuilder.",
							"orderBy (array) : Un tableau contenant les colonnes pour l'ordre de tri des r\u00e9sultats.",
							"setUnions($unions) : self<br>Description : D\u00e9finit les requ\u00eates UNION \u00e0 ajouter.<br>Param\u00e8tres :unions (array) : Un tableau contenant les requ\u00eates UNION \u00e0 ajouter.<br>Retour : L'instance de la classe SQLBuilder.",
							"unions (array) : Un tableau contenant les requ\u00eates UNION \u00e0 ajouter.",
							"addColonne($colonne)<br>Description : Ajoute une colonne \u00e0 s\u00e9lectionner.<br>Param\u00e8tres :colonne (string|array) : Le nom de la colonne \u00e0 ajouter ou un tableau contenant plusieurs noms de colonnes.<br>Retour : L'instance de la classe SQLBuilder.",
							"colonne (string|array) : Le nom de la colonne \u00e0 ajouter ou un tableau contenant plusieurs noms de colonnes.",
							"addCondition($condition)<br>Description : Ajoute une condition de recherche.<br>Param\u00e8tres :condition (string|array) : La condition de recherche \u00e0 ajouter ou un tableau contenant plusieurs conditions.<br>Retour : L'instance de la classe SQLBuilder.",
							"condition (string|array) : La condition de recherche \u00e0 ajouter ou un tableau contenant plusieurs conditions.",
							"addValue($value)<br>Description : Ajoute une valeur \u00e0 ins\u00e9rer.<br>Param\u00e8tres :value (string|array) : La valeur \u00e0 ajouter ou un tableau associatif contenant plusieurs valeurs.<br>Retour : L'instance de la classe SQLBuilder.",
							"value (string|array) : La valeur \u00e0 ajouter ou un tableau associatif contenant plusieurs valeurs.",
							"addJoinTable($table)<br>Description : Ajoute une table \u00e0 joindre.<br>Param\u00e8tres :table (string|array) : La table \u00e0 ajouter ou un tableau associatif contenant plusieurs tables \u00e0 joindre.<br>Retour : L'instance de la classe SQLBuilder.",
							"table (string|array) : La table \u00e0 ajouter ou un tableau associatif contenant plusieurs tables \u00e0 joindre.",
							"addAutoJoinTable($autoJoinTable)<br>Description : Ajoute automatiquement une table de jointure en utilisant une classe et un alias sp\u00e9cifi\u00e9s.<br>Param\u00e8tres :autoJoinTable (array) : Un tableau associatif contenant les informations de la table \u00e0 joindre automatiquement. Les cl\u00e9s du tableau correspondent aux informations suivantes :alias : L'alias de la table de jointure.class : La classe correspondante \u00e0 la table principale.aliasJoined : L'alias de la table jointe.classJoined : La classe correspondante \u00e0 la table jointe.<br>Retour : L'instance de la classe SQLBuilder.",
							"autoJoinTable (array) : Un tableau associatif contenant les informations de la table \u00e0 joindre automatiquement. Les cl\u00e9s du tableau correspondent aux informations suivantes :alias : L'alias de la table de jointure.class : La classe correspondante \u00e0 la table principale.aliasJoined : L'alias de la table jointe.classJoined : La classe correspondante \u00e0 la table jointe.",
							"alias : L'alias de la table de jointure.",
							"class : La classe correspondante \u00e0 la table principale.",
							"aliasJoined : L'alias de la table jointe.",
							"classJoined : La classe correspondante \u00e0 la table jointe.",
							"addGroupBy($groupBy)<br>Description : Ajoute des colonnes pour le regroupement.<br>Param\u00e8tres :groupBy (string|array) : Les colonnes \u00e0 ajouter pour le regroupement.<br>Retour : L'instance de la classe SQLBuilder.",
							"groupBy (string|array) : Les colonnes \u00e0 ajouter pour le regroupement.",
							"addHaving($having)<br>Description : Ajoute des conditions de filtrage apr\u00e8s regroupement.<br>Param\u00e8tres :having (string|array) : Les conditions \u00e0 ajouter pour le filtrage apr\u00e8s regroupement.<br>Retour : L'instance de la classe SQLBuilder.",
							"having (string|array) : Les conditions \u00e0 ajouter pour le filtrage apr\u00e8s regroupement.",
							"addOrderBy($orderBy)<br>Description : Ajoute des colonnes pour l'ordre de tri des r\u00e9sultats.<br>Param\u00e8tres :orderBy (string|array) : Les colonnes \u00e0 ajouter pour l'ordre de tri des r\u00e9sultats.<br>Retour : L'instance de la classe SQLBuilder.",
							"orderBy (string|array) : Les colonnes \u00e0 ajouter pour l'ordre de tri des r\u00e9sultats.",
							"addUnion($alias, $query)<br>Description : Ajoute une requ\u00eate UNION.<br>Param\u00e8tres :alias (string) : L'alias de la requ\u00eate UNION \u00e0 ajouter.query (string) : La requ\u00eate UNION \u00e0 ajouter.<br>Retour : L'instance de la classe SQLBuilder.",
							"alias (string) : L'alias de la requ\u00eate UNION \u00e0 ajouter.",
							"query (string) : La requ\u00eate UNION \u00e0 ajouter."
						]
					}
				},
				{
					"id": "Rfh-1g3azx",
					"type": "paragraph",
					"data": {
						"text": "Cette documentation pr\u00e9sente les principales m\u00e9thodes de la classe SQLBuilder ainsi que leurs descriptions et param\u00e8tres. Vous pouvez utiliser ces m\u00e9thodes pour construire des requ\u00eates SQL dynamiques en utilisant PHP."
					}
				},
				{
					"id": "NrnTSVmU9O",
					"type": "paragraph",
					"data": {
						"text": "Exemple d'instanciation de la classe :<br>"
					}
				},
				{
					"id": "uH357WSGDQ",
					"type": "code",
					"data": {
						"code": "use Core\\SQLBuilder;\n\/\/ Param\u00e8tres pour l'instanciation de SQLBuilder\n$parameters = [\n  \"colonnes\" => [\"id\", \"nom\", \"email\"],\n  \"table\" => \"utilisateurs\",\n  \"joinTables\" => [\n    \"roles\" => \"utilisateurs.role_id = roles.id\"\n  ],\n  \"conditions\" => [\n    \"statut = 'actif'\",\n    \"age >= 18\"\n  ],\n  \"values\" => [\n    \"alias1\" => \"valeur1\",\n    \"alias2\" => \"valeur2\"\n  ],\n  \"groupBy\" => [\"role_id\"],\n  \"having\" => [\"COUNT(*) > 10\"],\n  \"limit\" => 10,\n  \"offset\" => 0,\n  \"orderBy\" => [\"nom ASC\"]\n];\n\n\/\/ Instanciation de la classe SQLBuilder avec les param\u00e8tres\n$sqlBuilder = new SQLBuilder($parameters);\n\nreturn self::db_all($query->getSql(),$query->getValues());\n\n?>"
					}
				},
				{
					"id": "-mMN-iKjG8",
					"type": "paragraph",
					"data": {
						"text": "Exemple d'ajout de conditions<br>"
					}
				},
				{
					"id": "VeI6s9ZVN7",
					"type": "code",
					"data": {
						"code": "\/\/ Instanciation de la classe SQLBuilder avec les param\u00e8tres\n$filterNom = \"DUBOIS\";\n$sqlBuilder = new SQLBuilder($parameters);\n\nif ($filterNom){\n  $query->addValue([\":nom\" => \"%$filterNom%\"]);\n  $query->addCondition(\"nom LIKE :nom\");\n}\n\nreturn self::db_all($query->getSql(),$query->getValues());"
					}
				}
			],
			"version": "2.26.5"
		},
		"fullPath": "bdd.querybuilder"
	}
}